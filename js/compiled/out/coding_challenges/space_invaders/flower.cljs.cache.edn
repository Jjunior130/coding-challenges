{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name coding-challenges.space-invaders.flower, :imports nil, :requires {q quil.core, quil.core quil.core, coding-challenges.space-invaders.drop coding-challenges.space-invaders.drop}, :uses {hits? coding-challenges.space-invaders.drop}, :defs {make {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\space-invaders\\flower.cljs", :line 5, :column 7, :end-line 5, :end-column 11, :arglists (quote ([x y]))}, :name coding-challenges.space-invaders.flower/make, :variadic false, :file "src\\cljs\\coding_challenges\\space-invaders\\flower.cljs", :end-column 11, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y]))}, grow {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\space-invaders\\flower.cljs", :line 12, :column 7, :end-line 12, :end-column 11, :arglists (quote ([flower]))}, :name coding-challenges.space-invaders.flower/grow, :variadic false, :file "src\\cljs\\coding_challenges\\space-invaders\\flower.cljs", :end-column 11, :method-params ([flower]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 1, :fn-var true, :arglists (quote ([flower]))}, move {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\space-invaders\\flower.cljs", :line 16, :column 7, :end-line 16, :end-column 11, :arglists (quote ([{xdir :xdir, :as flower}]))}, :name coding-challenges.space-invaders.flower/move, :variadic false, :file "src\\cljs\\coding_challenges\\space-invaders\\flower.cljs", :end-column 11, :method-params ([p__35233]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{xdir :xdir, :as flower}]))}, shift-down {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\space-invaders\\flower.cljs", :line 21, :column 7, :end-line 21, :end-column 17, :arglists (quote ([{r :r, :as flower}]))}, :name coding-challenges.space-invaders.flower/shift-down, :variadic false, :file "src\\cljs\\coding_challenges\\space-invaders\\flower.cljs", :end-column 17, :method-params ([p__35238]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{r :r, :as flower}]))}, update* {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\space-invaders\\flower.cljs", :line 27, :column 7, :end-line 27, :end-column 14, :arglists (quote ([edge? drops flower]))}, :name coding-challenges.space-invaders.flower/update*, :variadic false, :file "src\\cljs\\coding_challenges\\space-invaders\\flower.cljs", :end-column 14, :method-params ([edge? drops flower]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 3, :fn-var true, :arglists (quote ([edge? drops flower]))}, draw {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\space-invaders\\flower.cljs", :line 33, :column 7, :end-line 33, :end-column 11, :arglists (quote ([{x :x, y :y, r :r, :as flower}]))}, :name coding-challenges.space-invaders.flower/draw, :variadic false, :file "src\\cljs\\coding_challenges\\space-invaders\\flower.cljs", :end-column 11, :method-params ([p__35246]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{x :x, y :y, r :r, :as flower}]))}}, :require-macros {q quil.core, quil.core quil.core}, :cljs.analyzer/constants {:seen #{:y :r :type :xdir Flower :x :always}, :order [:type :x :y :r :xdir Flower :always]}, :doc nil}