{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name coding-challenges.space-invaders.views, :imports nil, :requires {reagent reagent.core, re-com.core re-com.core, q quil.core, reagent.core reagent.core, rf re-frame.core, rc re-com.core, coding-challenges.space-invaders.flower coding-challenges.space-invaders.flower, m quil.middleware, flower coding-challenges.space-invaders.flower, quil.core quil.core, quil.middleware quil.middleware, coding-challenges.space-invaders.drop coding-challenges.space-invaders.drop, ship coding-challenges.space-invaders.ship, coding-challenges.space-invaders.ship coding-challenges.space-invaders.ship, re-frame.core re-frame.core, d coding-challenges.space-invaders.drop}, :uses {hits? coding-challenges.space-invaders.drop}, :defs {draw {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\space-invaders\\views.cljs", :line 59, :column 7, :end-line 59, :end-column 11, :arglists (quote ([{ship :ship, drops :drops, flowers :flowers, :as sketch}]))}, :name coding-challenges.space-invaders.views/draw, :variadic false, :file "src\\cljs\\coding_challenges\\space-invaders\\views.cljs", :end-column 11, :method-params ([p__35283]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{ship :ship, drops :drops, flowers :flowers, :as sketch}]))}, update-drops {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\space-invaders\\views.cljs", :line 26, :column 7, :end-line 26, :end-column 19, :arglists (quote ([{flowers :flowers, :as sketch}]))}, :name coding-challenges.space-invaders.views/update-drops, :variadic false, :file "src\\cljs\\coding_challenges\\space-invaders\\views.cljs", :end-column 19, :method-params ([p__35268]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{flowers :flowers, :as sketch}]))}, view {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\space-invaders\\views.cljs", :line 99, :column 7, :end-line 99, :end-column 11, :arglists (quote ([]))}, :name coding-challenges.space-invaders.views/view, :variadic false, :file "src\\cljs\\coding_challenges\\space-invaders\\views.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 99, :end-line 99, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, update-flowers {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\space-invaders\\views.cljs", :line 39, :column 7, :end-line 39, :end-column 21, :arglists (quote ([{drops :drops, :as sketch}]))}, :name coding-challenges.space-invaders.views/update-flowers, :variadic false, :file "src\\cljs\\coding_challenges\\space-invaders\\views.cljs", :end-column 21, :method-params ([p__35278]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{drops :drops, :as sketch}]))}, horizontal-edge? {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\space-invaders\\views.cljs", :line 34, :column 7, :end-line 34, :end-column 23, :arglists (quote ([{x :x}]))}, :name coding-challenges.space-invaders.views/horizontal-edge?, :variadic false, :file "src\\cljs\\coding_challenges\\space-invaders\\views.cljs", :end-column 23, :method-params ([p__35273]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{x :x}]))}, w {:name coding-challenges.space-invaders.views/w, :file "src\\cljs\\coding_challenges\\space-invaders\\views.cljs", :line 12, :column 1, :end-line 12, :end-column 7, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\space-invaders\\views.cljs", :line 12, :column 6, :end-line 12, :end-column 7}}, update-ship {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\space-invaders\\views.cljs", :line 49, :column 7, :end-line 49, :end-column 18, :arglists (quote ([sketch]))}, :name coding-challenges.space-invaders.views/update-ship, :variadic false, :file "src\\cljs\\coding_challenges\\space-invaders\\views.cljs", :end-column 18, :method-params ([sketch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 1, :fn-var true, :arglists (quote ([sketch]))}, update* {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\space-invaders\\views.cljs", :line 53, :column 7, :end-line 53, :end-column 14, :arglists (quote ([sketch]))}, :name coding-challenges.space-invaders.views/update*, :variadic false, :file "src\\cljs\\coding_challenges\\space-invaders\\views.cljs", :end-column 14, :method-params ([sketch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 1, :fn-var true, :arglists (quote ([sketch]))}, space-invaders-sketch {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\space-invaders\\views.cljs", :line 88, :column 14, :end-line 88, :end-column 35, :export true, :arglists (quote ([]))}, :name coding-challenges.space-invaders.views/space-invaders-sketch, :variadic false, :file "src\\cljs\\coding_challenges\\space-invaders\\views.cljs", :end-column 35, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 88, :end-line 88, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, setup {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\space-invaders\\views.cljs", :line 15, :column 7, :end-line 15, :end-column 12, :arglists (quote ([]))}, :name coding-challenges.space-invaders.views/setup, :variadic false, :file "src\\cljs\\coding_challenges\\space-invaders\\views.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, h {:name coding-challenges.space-invaders.views/h, :file "src\\cljs\\coding_challenges\\space-invaders\\views.cljs", :line 13, :column 1, :end-line 13, :end-column 7, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\space-invaders\\views.cljs", :line 13, :column 6, :end-line 13, :end-column 7}}, key-pressed {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\space-invaders\\views.cljs", :line 70, :column 7, :end-line 70, :end-column 18, :arglists (quote ([{{x :x} :ship, :as sketch} event]))}, :name coding-challenges.space-invaders.views/key-pressed, :variadic false, :file "src\\cljs\\coding_challenges\\space-invaders\\views.cljs", :end-column 18, :method-params ([p__35340 event]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 70, :end-line 70, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{{x :x} :ship, :as sketch} event]))}, key-released {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\space-invaders\\views.cljs", :line 84, :column 7, :end-line 84, :end-column 19, :arglists (quote ([sketch]))}, :name coding-challenges.space-invaders.views/key-released, :variadic false, :file "src\\cljs\\coding_challenges\\space-invaders\\views.cljs", :end-column 19, :method-params ([sketch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 84, :end-line 84, :max-fixed-arity 1, :fn-var true, :arglists (quote ([sketch]))}}, :require-macros {q quil.core, quil.core quil.core, reagent reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:drops :setval :children :align :key-typed :canvas#space-invaders :select-one :fn :space-invaders :sketch :pre :key :tabs :component-did-mount :flower :drop :width :update :flowers :size :center :setup :middleware :level :ship :host :code.javascript :xdir :reagent-render :key-released :label :id :code :right :host-id :no-start :d :x :draw :on-change :level1 :code.clojure :a :height :left :model}, :order [:ship :flowers :drops :x :key :left :a :xdir :right :d :key-typed :update :size :setup :middleware :host :key-released :no-start :draw :fn :host-id :reagent-render :component-did-mount :select-one :space-invaders :code :align :center :children :sketch :label :level :level1 :canvas#space-invaders :width :height :tabs :id :drop :flower :model :on-change :setval :pre :code.clojure :code.javascript]}, :doc nil}