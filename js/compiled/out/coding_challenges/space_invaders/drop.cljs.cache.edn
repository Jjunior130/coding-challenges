{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name coding-challenges.space-invaders.drop, :imports nil, :requires {q quil.core, quil.core quil.core}, :uses nil, :defs {make {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\space-invaders\\drop.cljs", :line 4, :column 7, :end-line 4, :end-column 11, :arglists (quote ([x y]))}, :name coding-challenges.space-invaders.drop/make, :variadic false, :file "src\\cljs\\coding_challenges\\space-invaders\\drop.cljs", :end-column 11, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 4, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y]))}, move-up {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\space-invaders\\drop.cljs", :line 10, :column 7, :end-line 10, :end-column 14, :arglists (quote ([d]))}, :name coding-challenges.space-invaders.drop/move-up, :variadic false, :file "src\\cljs\\coding_challenges\\space-invaders\\drop.cljs", :end-column 14, :method-params ([d]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([d]))}, hits? {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\space-invaders\\drop.cljs", :line 14, :column 7, :end-line 14, :end-column 12, :arglists (quote ([{dx :x, dy :y, dr :r, :as d} {fx :x, fy :y, fr :r, :as flower}]))}, :name coding-challenges.space-invaders.drop/hits?, :variadic false, :file "src\\cljs\\coding_challenges\\space-invaders\\drop.cljs", :end-column 12, :method-params ([p__35216 p__35217]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{dx :x, dy :y, dr :r, :as d} {fx :x, fy :y, fr :r, :as flower}]))}, update* {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\space-invaders\\drop.cljs", :line 26, :column 7, :end-line 26, :end-column 14, :arglists (quote ([d]))}, :name coding-challenges.space-invaders.drop/update*, :variadic false, :file "src\\cljs\\coding_challenges\\space-invaders\\drop.cljs", :end-column 14, :method-params ([d]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 1, :fn-var true, :arglists (quote ([d]))}, draw {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\space-invaders\\drop.cljs", :line 29, :column 7, :end-line 29, :end-column 11, :arglists (quote ([{dx :x, dy :y, dr :r, :as d}]))}, :name coding-challenges.space-invaders.drop/draw, :variadic false, :file "src\\cljs\\coding_challenges\\space-invaders\\drop.cljs", :end-column 11, :method-params ([p__35226]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{dx :x, dy :y, dr :r, :as d}]))}}, :require-macros {q quil.core, quil.core quil.core}, :cljs.analyzer/constants {:seen #{:y :r :type Drop :x}, :order [:type :x :y :r Drop]}, :doc nil}