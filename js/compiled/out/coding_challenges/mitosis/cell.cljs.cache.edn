{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name coding-challenges.mitosis.cell, :imports nil, :requires {q quil.core, quil.core quil.core}, :uses nil, :defs {make {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\mitosis\\cell.cljs", :line 4, :column 7, :end-line 4, :end-column 11, :arglists (quote ([] [pos r c])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([] [pos r c]), :arglists ([] [pos r c]), :arglists-meta (nil nil)}}, :name coding-challenges.mitosis.cell/make, :variadic false, :file "src\\cljs\\coding_challenges\\mitosis\\cell.cljs", :end-column 11, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([] [pos r c]), :arglists ([] [pos r c]), :arglists-meta (nil nil)}, :method-params ([] [pos r c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 4, :max-fixed-arity 3, :fn-var true, :arglists ([] [pos r c])}, clicked? {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\mitosis\\cell.cljs", :line 19, :column 7, :end-line 19, :end-column 15, :arglists (quote ([{mx :x, my :y, :as click-pos} {{cx :x, cy :y} :pos, cr :r, :as cell}]))}, :name coding-challenges.mitosis.cell/clicked?, :variadic false, :file "src\\cljs\\coding_challenges\\mitosis\\cell.cljs", :end-column 15, :method-params ([p__34610 p__34611]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{mx :x, my :y, :as click-pos} {{cx :x, cy :y} :pos, cr :r, :as cell}]))}, mitosis {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\mitosis\\cell.cljs", :line 29, :column 7, :end-line 29, :end-column 14, :arglists (quote ([{pos :pos, r :r, c :c, :as cell}]))}, :name coding-challenges.mitosis.cell/mitosis, :variadic false, :file "src\\cljs\\coding_challenges\\mitosis\\cell.cljs", :end-column 14, :method-params ([p__34624]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{pos :pos, r :r, c :c, :as cell}]))}, move {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\mitosis\\cell.cljs", :line 36, :column 7, :end-line 36, :end-column 11, :arglists (quote ([n cell]))}, :name coding-challenges.mitosis.cell/move, :variadic false, :file "src\\cljs\\coding_challenges\\mitosis\\cell.cljs", :end-column 11, :method-params ([n cell]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 2, :fn-var true, :arglists (quote ([n cell]))}, update* {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\mitosis\\cell.cljs", :line 42, :column 7, :end-line 42, :end-column 14, :arglists (quote ([cell]))}, :name coding-challenges.mitosis.cell/update*, :variadic false, :file "src\\cljs\\coding_challenges\\mitosis\\cell.cljs", :end-column 14, :method-params ([cell]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 1, :fn-var true, :arglists (quote ([cell]))}, draw {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\mitosis\\cell.cljs", :line 45, :column 7, :end-line 45, :end-column 11, :arglists (quote ([{{x :x, y :y} :pos, color :c, r :r, :as cell}]))}, :name coding-challenges.mitosis.cell/draw, :variadic false, :file "src\\cljs\\coding_challenges\\mitosis\\cell.cljs", :end-column 11, :method-params ([p__34629]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{{x :x, y :y} :pos, color :c, r :r, :as cell}]))}}, :require-macros {q quil.core, quil.core quil.core}, :cljs.analyzer/constants {:seen #{:y :r :pos :type :c :x Cell}, :order [:x :y :type :pos :r :c Cell]}, :doc nil}