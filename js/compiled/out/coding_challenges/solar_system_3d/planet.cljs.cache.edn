{:rename-macros {}, :renames {}, :use-macros {setval com.rpl.specter, transform com.rpl.specter, putval com.rpl.specter, collect-one com.rpl.specter, ALL com.rpl.specter}, :excludes #{}, :name coding-challenges.solar-system-3d.planet, :imports nil, :requires {q quil.core, quil.core quil.core, sp com.rpl.specter, com.rpl.specter com.rpl.specter}, :uses {putval com.rpl.specter, collect-one com.rpl.specter, ALL com.rpl.specter}, :defs {draw {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\solar-system-3d\\planet.cljs", :line 68, :column 7, :end-line 68, :end-column 11, :arglists (quote ([{angle :angle, radius :radius, planets :planets, v :v, :as planet}]))}, :name coding-challenges.solar-system-3d.planet/draw, :variadic false, :file "src\\cljs\\coding_challenges\\solar-system-3d\\planet.cljs", :end-column 11, :method-params ([p__32337]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 68, :end-line 68, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{angle :angle, radius :radius, planets :planets, v :v, :as planet}]))}, pathcache32307 {:name coding-challenges.solar-system-3d.planet/pathcache32307, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\solar-system-3d\\planet.cljs", :line 33, :column 7}, cross {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\solar-system-3d\\planet.cljs", :line 58, :column 7, :end-line 58, :end-column 12, :arglists (quote ([{x1 :x, y1 :y, z1 :z} {x2 :x, y2 :y, z2 :z}]))}, :name coding-challenges.solar-system-3d.planet/cross, :variadic false, :file "src\\cljs\\coding_challenges\\solar-system-3d\\planet.cljs", :end-column 12, :method-params ([p__32327 p__32328]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 58, :end-line 58, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{x1 :x, y1 :y, z1 :z} {x2 :x, y2 :y, z2 :z}]))}, spawn-moons {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\solar-system-3d\\planet.cljs", :line 31, :column 7, :end-line 31, :end-column 18, :arglists (quote ([total level planet]))}, :name coding-challenges.solar-system-3d.planet/spawn-moons, :variadic false, :file "src\\cljs\\coding_challenges\\solar-system-3d\\planet.cljs", :end-column 18, :method-params ([total level planet]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 3, :fn-var true, :arglists (quote ([total level planet]))}, make {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\solar-system-3d\\planet.cljs", :line 22, :column 7, :end-line 22, :end-column 11, :arglists (quote ([r d o]))}, :name coding-challenges.solar-system-3d.planet/make, :variadic false, :file "src\\cljs\\coding_challenges\\solar-system-3d\\planet.cljs", :end-column 11, :method-params ([r d o]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 3, :fn-var true, :arglists (quote ([r d o]))}, pathcache32318 {:name coding-challenges.solar-system-3d.planet/pathcache32318, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\solar-system-3d\\planet.cljs", :line 50, :column 7}, pathcache32321 {:name coding-challenges.solar-system-3d.planet/pathcache32321, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\solar-system-3d\\planet.cljs", :line 52, :column 7}, orbit {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\solar-system-3d\\planet.cljs", :line 48, :column 7, :end-line 48, :end-column 12, :arglists (quote ([planet]))}, :name coding-challenges.solar-system-3d.planet/orbit, :variadic false, :file "src\\cljs\\coding_challenges\\solar-system-3d\\planet.cljs", :end-column 12, :method-params ([planet]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 48, :end-line 48, :max-fixed-arity 1, :fn-var true, :arglists (quote ([planet]))}, pathcache32311 {:name coding-challenges.solar-system-3d.planet/pathcache32311, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\solar-system-3d\\planet.cljs", :line 33, :column 7}, pathcache32301 {:name coding-challenges.solar-system-3d.planet/pathcache32301, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\solar-system-3d\\planet.cljs", :line 28, :column 7}, update* {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\solar-system-3d\\planet.cljs", :line 55, :column 7, :end-line 55, :end-column 14, :arglists (quote ([planet]))}, :name coding-challenges.solar-system-3d.planet/update*, :variadic false, :file "src\\cljs\\coding_challenges\\solar-system-3d\\planet.cljs", :end-column 14, :method-params ([planet]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 1, :fn-var true, :arglists (quote ([planet]))}, pathcache32304 {:name coding-challenges.solar-system-3d.planet/pathcache32304, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\solar-system-3d\\planet.cljs", :line 28, :column 7}, pathcache32324 {:name coding-challenges.solar-system-3d.planet/pathcache32324, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\solar-system-3d\\planet.cljs", :line 50, :column 7}, pathcache32315 {:name coding-challenges.solar-system-3d.planet/pathcache32315, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\solar-system-3d\\planet.cljs", :line 52, :column 7}, random-coordinate {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\solar-system-3d\\planet.cljs", :line 7, :column 7, :end-line 7, :end-column 24, :arglists (quote ([distance]))}, :name coding-challenges.solar-system-3d.planet/random-coordinate, :variadic false, :file "src\\cljs\\coding_challenges\\solar-system-3d\\planet.cljs", :end-column 24, :method-params ([distance]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([distance]))}}, :require-macros {q quil.core, quil.core quil.core, sp com.rpl.specter, com.rpl.specter com.rpl.specter}, :cljs.analyzer/constants {:seen #{:y com.rpl.specter :planets :v :ns :name :file :end-column :type collect-one :angle :radius :column :z :line com.rpl.specter/collect-one :end-line Planet com.rpl.specter/ALL :x :distance :arglists :doc :test :orbit-speed ALL}, :order [:x :y :z com.rpl.specter/collect-one :ns :name :file :end-column :column :line :end-line :arglists :doc :test com.rpl.specter collect-one :distance :v :type :radius :angle :orbit-speed Planet :planets com.rpl.specter/ALL ALL]}, :doc nil}