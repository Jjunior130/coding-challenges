{:rename-macros {}, :renames {}, :use-macros {setval com.rpl.specter, transform com.rpl.specter, putval com.rpl.specter, collect-one com.rpl.specter, ALL com.rpl.specter}, :excludes #{}, :name coding-challenges.solar-system.planet, :imports nil, :requires {q quil.core, quil.core quil.core, sp com.rpl.specter, com.rpl.specter com.rpl.specter}, :uses {putval com.rpl.specter, collect-one com.rpl.specter, ALL com.rpl.specter}, :defs {draw {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\solar-system\\planet.cljs", :line 36, :column 7, :end-line 36, :end-column 11, :arglists (quote ([planet]))}, :name coding-challenges.solar-system.planet/draw, :variadic false, :file "src\\cljs\\coding_challenges\\solar-system\\planet.cljs", :end-column 11, :method-params ([planet]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 1, :fn-var true, :arglists (quote ([planet]))}, pathcache141604 {:name coding-challenges.solar-system.planet/pathcache141604, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\solar-system\\planet.cljs", :line 28, :column 7}, spawn-moons {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\solar-system\\planet.cljs", :line 12, :column 7, :end-line 12, :end-column 18, :arglists (quote ([total level planet]))}, :name coding-challenges.solar-system.planet/spawn-moons, :variadic false, :file "src\\cljs\\coding_challenges\\solar-system\\planet.cljs", :end-column 18, :method-params ([total level planet]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 3, :fn-var true, :arglists (quote ([total level planet]))}, make {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\solar-system\\planet.cljs", :line 5, :column 7, :end-line 5, :end-column 11, :arglists (quote ([r d o]))}, :name coding-challenges.solar-system.planet/make, :variadic false, :file "src\\cljs\\coding_challenges\\solar-system\\planet.cljs", :end-column 11, :method-params ([r d o]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 3, :fn-var true, :arglists (quote ([r d o]))}, orbit {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\solar-system\\planet.cljs", :line 26, :column 7, :end-line 26, :end-column 12, :arglists (quote ([planet]))}, :name coding-challenges.solar-system.planet/orbit, :variadic false, :file "src\\cljs\\coding_challenges\\solar-system\\planet.cljs", :end-column 12, :method-params ([planet]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 1, :fn-var true, :arglists (quote ([planet]))}, pathcache141607 {:name coding-challenges.solar-system.planet/pathcache141607, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\solar-system\\planet.cljs", :line 30, :column 7}, update* {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\solar-system\\planet.cljs", :line 33, :column 7, :end-line 33, :end-column 14, :arglists (quote ([planet]))}, :name coding-challenges.solar-system.planet/update*, :variadic false, :file "src\\cljs\\coding_challenges\\solar-system\\planet.cljs", :end-column 14, :method-params ([planet]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([planet]))}, pathcache141610 {:name coding-challenges.solar-system.planet/pathcache141610, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\solar-system\\planet.cljs", :line 28, :column 7}, pathcache141597 {:name coding-challenges.solar-system.planet/pathcache141597, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\solar-system\\planet.cljs", :line 14, :column 7}, pathcache141593 {:name coding-challenges.solar-system.planet/pathcache141593, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\solar-system\\planet.cljs", :line 14, :column 7}, pathcache141601 {:name coding-challenges.solar-system.planet/pathcache141601, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\solar-system\\planet.cljs", :line 30, :column 7}}, :require-macros {q quil.core, quil.core quil.core, sp com.rpl.specter, com.rpl.specter com.rpl.specter}, :cljs.analyzer/constants {:seen #{com.rpl.specter :planets :ns :name :file :end-column :type collect-one :angle :radius :column :line com.rpl.specter/collect-one :end-line Planet com.rpl.specter/ALL :distance :arglists :doc :test :orbit-speed ALL}, :order [:type :radius :distance :angle :orbit-speed Planet :planets com.rpl.specter/ALL :ns :name :file :end-column :column :line :end-line :arglists :doc :test com.rpl.specter ALL com.rpl.specter/collect-one collect-one]}, :doc nil}