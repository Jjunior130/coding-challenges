{:rename-macros {}, :renames {}, :use-macros {setval com.rpl.specter, transform com.rpl.specter, putval com.rpl.specter, collect-one com.rpl.specter, ALL com.rpl.specter}, :excludes #{}, :name coding-challenges.solar-system-3d-texture.planet, :imports nil, :requires {q quil.core, quil.core quil.core, sp com.rpl.specter, com.rpl.specter com.rpl.specter}, :uses {putval com.rpl.specter, collect-one com.rpl.specter, ALL com.rpl.specter}, :defs {pathcache141498 {:name coding-challenges.solar-system-3d-texture.planet/pathcache141498, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\solar-system-3d-texture\\planet.cljs", :line 29, :column 7}, draw {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\solar-system-3d-texture\\planet.cljs", :line 63, :column 7, :end-line 63, :end-column 11, :arglists (quote ([img {angle :angle, radius :radius, planets :planets, v :v, globe :globe, :as planet}]))}, :name coding-challenges.solar-system-3d-texture.planet/draw, :variadic false, :file "src\\cljs\\coding_challenges\\solar-system-3d-texture\\planet.cljs", :end-column 11, :method-params ([img p__141524]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 63, :end-line 63, :max-fixed-arity 2, :fn-var true, :arglists (quote ([img {angle :angle, radius :radius, planets :planets, v :v, globe :globe, :as planet}]))}, pathcache141491 {:name coding-challenges.solar-system-3d-texture.planet/pathcache141491, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\solar-system-3d-texture\\planet.cljs", :line 11, :column 7}, pathcache141508 {:name coding-challenges.solar-system-3d-texture.planet/pathcache141508, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\solar-system-3d-texture\\planet.cljs", :line 47, :column 7}, cross {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\solar-system-3d-texture\\planet.cljs", :line 53, :column 7, :end-line 53, :end-column 12, :arglists (quote ([{x1 :x, y1 :y, z1 :z} {x2 :x, y2 :y, z2 :z}]))}, :name coding-challenges.solar-system-3d-texture.planet/cross, :variadic false, :file "src\\cljs\\coding_challenges\\solar-system-3d-texture\\planet.cljs", :end-column 12, :method-params ([p__141514 p__141515]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{x1 :x, y1 :y, z1 :z} {x2 :x, y2 :y, z2 :z}]))}, pathcache141488 {:name coding-challenges.solar-system-3d-texture.planet/pathcache141488, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\solar-system-3d-texture\\planet.cljs", :line 11, :column 7}, spawn-moons {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\solar-system-3d-texture\\planet.cljs", :line 27, :column 7, :end-line 27, :end-column 18, :arglists (quote ([total level planet]))}, :name coding-challenges.solar-system-3d-texture.planet/spawn-moons, :variadic false, :file "src\\cljs\\coding_challenges\\solar-system-3d-texture\\planet.cljs", :end-column 18, :method-params ([total level planet]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 3, :fn-var true, :arglists (quote ([total level planet]))}, pathcache141505 {:name coding-challenges.solar-system-3d-texture.planet/pathcache141505, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\solar-system-3d-texture\\planet.cljs", :line 45, :column 7}, make {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\solar-system-3d-texture\\planet.cljs", :line 5, :column 7, :end-line 5, :end-column 11, :arglists (quote ([r d o]))}, :name coding-challenges.solar-system-3d-texture.planet/make, :variadic false, :file "src\\cljs\\coding_challenges\\solar-system-3d-texture\\planet.cljs", :end-column 11, :method-params ([r d o]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 3, :fn-var true, :arglists (quote ([r d o]))}, pathcache141502 {:name coding-challenges.solar-system-3d-texture.planet/pathcache141502, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\solar-system-3d-texture\\planet.cljs", :line 47, :column 7}, pathcache141511 {:name coding-challenges.solar-system-3d-texture.planet/pathcache141511, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\solar-system-3d-texture\\planet.cljs", :line 45, :column 7}, orbit {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\solar-system-3d-texture\\planet.cljs", :line 43, :column 7, :end-line 43, :end-column 12, :arglists (quote ([planet]))}, :name coding-challenges.solar-system-3d-texture.planet/orbit, :variadic false, :file "src\\cljs\\coding_challenges\\solar-system-3d-texture\\planet.cljs", :end-column 12, :method-params ([planet]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 1, :fn-var true, :arglists (quote ([planet]))}, update* {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\solar-system-3d-texture\\planet.cljs", :line 50, :column 7, :end-line 50, :end-column 14, :arglists (quote ([planet]))}, :name coding-challenges.solar-system-3d-texture.planet/update*, :variadic false, :file "src\\cljs\\coding_challenges\\solar-system-3d-texture\\planet.cljs", :end-column 14, :method-params ([planet]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 1, :fn-var true, :arglists (quote ([planet]))}, pathcache141494 {:name coding-challenges.solar-system-3d-texture.planet/pathcache141494, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\solar-system-3d-texture\\planet.cljs", :line 29, :column 7}}, :require-macros {q quil.core, quil.core quil.core, sp com.rpl.specter, com.rpl.specter com.rpl.specter}, :cljs.analyzer/constants {:seen #{:y com.rpl.specter :planets :v :ns :name :file :end-column :type collect-one :angle :radius :column :z :line com.rpl.specter/collect-one :end-line Planet com.rpl.specter/ALL :x :distance :arglists :doc :globe :test :orbit-speed ALL}, :order [com.rpl.specter/collect-one :ns :name :file :end-column :column :line :end-line :arglists :doc :test com.rpl.specter collect-one :distance :v :x :y :z :type :radius :angle :orbit-speed Planet :planets com.rpl.specter/ALL ALL :globe]}, :doc nil}