{:rename-macros {}, :renames {}, :use-macros {setval com.rpl.specter, transform com.rpl.specter, putval com.rpl.specter, collect-one com.rpl.specter, ALL com.rpl.specter}, :excludes #{}, :name coding-challenges.snake-game.views, :imports nil, :requires {com.rpl.specter com.rpl.specter, reagent reagent.core, re-com.core re-com.core, q quil.core, reagent.core reagent.core, rc re-com.core, sp com.rpl.specter, snake coding-challenges.snake-game.snake, coding-challenges.snake-game.snake coding-challenges.snake-game.snake, m quil.middleware, quil.core quil.core, quil.middleware quil.middleware}, :uses {putval com.rpl.specter, collect-one com.rpl.specter, eat? coding-challenges.snake-game.snake, ALL com.rpl.specter}, :defs {pathcache62317 {:name coding-challenges.snake-game.views/pathcache62317, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\snake-game\\view.cljs", :line 69, :column 7}, draw {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\snake-game\\view.cljs", :line 52, :column 7, :end-line 52, :end-column 11, :arglists (quote ([{food :food, snake :snake, scl :scale, :as sketch}]))}, :name coding-challenges.snake-game.views/draw, :variadic false, :file "src\\cljs\\coding_challenges\\snake-game\\view.cljs", :end-column 11, :method-params ([p__62307]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{food :food, snake :snake, scl :scale, :as sketch}]))}, snake-game-sketch {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\snake-game\\view.cljs", :line 127, :column 14, :end-line 127, :end-column 31, :export true, :arglists (quote ([]))}, :name coding-challenges.snake-game.views/snake-game-sketch, :variadic false, :file "src\\cljs\\coding_challenges\\snake-game\\view.cljs", :end-column 31, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 127, :end-line 127, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, view {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\snake-game\\view.cljs", :line 138, :column 7, :end-line 138, :end-column 11, :arglists (quote ([]))}, :name coding-challenges.snake-game.views/view, :variadic false, :file "src\\cljs\\coding_challenges\\snake-game\\view.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 138, :end-line 138, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, pathcache62324 {:name coding-challenges.snake-game.views/pathcache62324, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\snake-game\\view.cljs", :line 112, :column 7}, mouse-clicked {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\snake-game\\view.cljs", :line 123, :column 7, :end-line 123, :end-column 20, :arglists (quote ([sketch event]))}, :name coding-challenges.snake-game.views/mouse-clicked, :variadic false, :file "src\\cljs\\coding_challenges\\snake-game\\view.cljs", :end-column 20, :method-params ([sketch event]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 123, :end-line 123, :max-fixed-arity 2, :fn-var true, :arglists (quote ([sketch event]))}, pathcache62304 {:name coding-challenges.snake-game.views/pathcache62304, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\snake-game\\view.cljs", :line 39, :column 7}, pathcache62295 {:name coding-challenges.snake-game.views/pathcache62295, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\snake-game\\view.cljs", :line 32, :column 7}, pathcache62327 {:name coding-challenges.snake-game.views/pathcache62327, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\snake-game\\view.cljs", :line 112, :column 7}, pathcache62301 {:name coding-challenges.snake-game.views/pathcache62301, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\snake-game\\view.cljs", :line 39, :column 7}, pathcache62298 {:name coding-challenges.snake-game.views/pathcache62298, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\snake-game\\view.cljs", :line 32, :column 7}, pick-location {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\snake-game\\view.cljs", :line 15, :column 7, :end-line 15, :end-column 20, :arglists (quote ([scl]))}, :name coding-challenges.snake-game.views/pick-location, :variadic false, :file "src\\cljs\\coding_challenges\\snake-game\\view.cljs", :end-column 20, :method-params ([scl]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([scl]))}, pathcache62289 {:name coding-challenges.snake-game.views/pathcache62289, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\snake-game\\view.cljs", :line 26, :column 7}, w {:name coding-challenges.snake-game.views/w, :file "src\\cljs\\coding_challenges\\snake-game\\view.cljs", :line 12, :column 1, :end-line 12, :end-column 7, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\snake-game\\view.cljs", :line 12, :column 6, :end-line 12, :end-column 7}}, pathcache62292 {:name coding-challenges.snake-game.views/pathcache62292, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\snake-game\\view.cljs", :line 26, :column 7}, pathcache62312 {:name coding-challenges.snake-game.views/pathcache62312, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\snake-game\\view.cljs", :line 69, :column 7}, update* {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\snake-game\\view.cljs", :line 47, :column 7, :end-line 47, :end-column 14, :arglists (quote ([sketch]))}, :name coding-challenges.snake-game.views/update*, :variadic false, :file "src\\cljs\\coding_challenges\\snake-game\\view.cljs", :end-column 14, :method-params ([sketch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 1, :fn-var true, :arglists (quote ([sketch]))}, update-food {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\snake-game\\view.cljs", :line 37, :column 7, :end-line 37, :end-column 18, :arglists (quote ([sketch]))}, :name coding-challenges.snake-game.views/update-food, :variadic false, :file "src\\cljs\\coding_challenges\\snake-game\\view.cljs", :end-column 18, :method-params ([sketch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 1, :fn-var true, :arglists (quote ([sketch]))}, turn-snake? {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\snake-game\\view.cljs", :line 65, :column 7, :end-line 65, :end-column 18, :arglists (quote ([nxd nyd sketch])), :doc "Change direction only if next position doesn't result in death."}, :name coding-challenges.snake-game.views/turn-snake?, :variadic false, :file "src\\cljs\\coding_challenges\\snake-game\\view.cljs", :end-column 18, :method-params ([nxd nyd sketch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 65, :end-line 65, :max-fixed-arity 3, :fn-var true, :arglists (quote ([nxd nyd sketch])), :doc "Change direction only if next position doesn't result in death."}, setup {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\snake-game\\view.cljs", :line 22, :column 7, :end-line 22, :end-column 12, :arglists (quote ([]))}, :name coding-challenges.snake-game.views/setup, :variadic false, :file "src\\cljs\\coding_challenges\\snake-game\\view.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, increase-snake-tail {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\snake-game\\view.cljs", :line 110, :column 7, :end-line 110, :end-column 26, :arglists (quote ([sketch]))}, :name coding-challenges.snake-game.views/increase-snake-tail, :variadic false, :file "src\\cljs\\coding_challenges\\snake-game\\view.cljs", :end-column 26, :method-params ([sketch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 110, :end-line 110, :max-fixed-arity 1, :fn-var true, :arglists (quote ([sketch]))}, update-snake {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\snake-game\\view.cljs", :line 30, :column 7, :end-line 30, :end-column 19, :arglists (quote ([sketch]))}, :name coding-challenges.snake-game.views/update-snake, :variadic false, :file "src\\cljs\\coding_challenges\\snake-game\\view.cljs", :end-column 19, :method-params ([sketch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 1, :fn-var true, :arglists (quote ([sketch]))}, h {:name coding-challenges.snake-game.views/h, :file "src\\cljs\\coding_challenges\\snake-game\\view.cljs", :line 13, :column 1, :end-line 13, :end-column 7, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\snake-game\\view.cljs", :line 13, :column 6, :end-line 13, :end-column 7}}, key-pressed {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\snake-game\\view.cljs", :line 90, :column 7, :end-line 90, :end-column 18, :arglists (quote ([sketch event]))}, :name coding-challenges.snake-game.views/key-pressed, :variadic false, :file "src\\cljs\\coding_challenges\\snake-game\\view.cljs", :end-column 18, :method-params ([sketch event]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 90, :end-line 90, :max-fixed-arity 2, :fn-var true, :arglists (quote ([sketch event]))}}, :require-macros {q quil.core, quil.core quil.core, reagent reagent.core, reagent.core reagent.core, sp com.rpl.specter, com.rpl.specter com.rpl.specter}, :cljs.analyzer/constants {:seen #{:y com.rpl.specter :down :mouse-clicked :fn :key :snake :else :scale :ns :name :w :component-did-mount :file :end-column :width :type :update collect-one :s :up :size :column :setup :middleware :level :div :host :food Food :canvas#snake-game :reagent-render :line :key-pressed com.rpl.specter/collect-one :tail :label :xspeed :end-line :right :host-id :no-start :d :br :x :draw :arglists :doc :level1 :test :a :height :left :yspeed}, :order [:type :x :y Food com.rpl.specter/collect-one :ns :name :file :end-column :column :line :end-line :arglists :doc :test com.rpl.specter collect-one :scale :food :snake :xspeed :yspeed :tail :key :up :w :down :s :left :a :right :d :else :mouse-clicked :update :size :setup :middleware :host :key-pressed :no-start :draw :fn :host-id :reagent-render :component-did-mount :div :label :level :level1 :br :canvas#snake-game :width :height]}, :doc nil}