{:rename-macros {}, :renames {}, :use-macros {setval com.rpl.specter, transform com.rpl.specter, putval com.rpl.specter, collect-one com.rpl.specter, ALL com.rpl.specter}, :excludes #{}, :name coding-challenges.snake-game.views, :imports nil, :requires {com.rpl.specter com.rpl.specter, reagent reagent.core, re-com.core re-com.core, q quil.core, reagent.core reagent.core, rf re-frame.core, rc re-com.core, sp com.rpl.specter, snake coding-challenges.snake-game.snake, coding-challenges.snake-game.snake coding-challenges.snake-game.snake, m quil.middleware, quil.core quil.core, quil.middleware quil.middleware, re-frame.core re-frame.core}, :uses {putval com.rpl.specter, collect-one com.rpl.specter, eat? coding-challenges.snake-game.snake, ALL com.rpl.specter}, :defs {draw {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\snake-game\\views.cljs", :line 53, :column 7, :end-line 53, :end-column 11, :arglists (quote ([{food :food, snake :snake, scl :scale, :as sketch}]))}, :name coding-challenges.snake-game.views/draw, :variadic false, :file "src\\cljs\\coding_challenges\\snake-game\\views.cljs", :end-column 11, :method-params ([p__33391]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{food :food, snake :snake, scl :scale, :as sketch}]))}, snake-game-sketch {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\snake-game\\views.cljs", :line 128, :column 14, :end-line 128, :end-column 31, :export true, :arglists (quote ([]))}, :name coding-challenges.snake-game.views/snake-game-sketch, :variadic false, :file "src\\cljs\\coding_challenges\\snake-game\\views.cljs", :end-column 31, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 128, :end-line 128, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, pathcache33376 {:name coding-challenges.snake-game.views/pathcache33376, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\snake-game\\views.cljs", :line 27, :column 7}, view {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\snake-game\\views.cljs", :line 139, :column 7, :end-line 139, :end-column 11, :arglists (quote ([]))}, :name coding-challenges.snake-game.views/view, :variadic false, :file "src\\cljs\\coding_challenges\\snake-game\\views.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 139, :end-line 139, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, pathcache33388 {:name coding-challenges.snake-game.views/pathcache33388, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\snake-game\\views.cljs", :line 40, :column 7}, mouse-clicked {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\snake-game\\views.cljs", :line 124, :column 7, :end-line 124, :end-column 20, :arglists (quote ([sketch event]))}, :name coding-challenges.snake-game.views/mouse-clicked, :variadic false, :file "src\\cljs\\coding_challenges\\snake-game\\views.cljs", :end-column 20, :method-params ([sketch event]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 124, :end-line 124, :max-fixed-arity 2, :fn-var true, :arglists (quote ([sketch event]))}, pathcache33385 {:name coding-challenges.snake-game.views/pathcache33385, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\snake-game\\views.cljs", :line 40, :column 7}, pathcache33373 {:name coding-challenges.snake-game.views/pathcache33373, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\snake-game\\views.cljs", :line 27, :column 7}, pick-location {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\snake-game\\views.cljs", :line 16, :column 7, :end-line 16, :end-column 20, :arglists (quote ([scl]))}, :name coding-challenges.snake-game.views/pick-location, :variadic false, :file "src\\cljs\\coding_challenges\\snake-game\\views.cljs", :end-column 20, :method-params ([scl]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 1, :fn-var true, :arglists (quote ([scl]))}, pathcache33411 {:name coding-challenges.snake-game.views/pathcache33411, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\snake-game\\views.cljs", :line 113, :column 7}, pathcache33401 {:name coding-challenges.snake-game.views/pathcache33401, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\snake-game\\views.cljs", :line 70, :column 7}, pathcache33382 {:name coding-challenges.snake-game.views/pathcache33382, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\snake-game\\views.cljs", :line 33, :column 7}, w {:name coding-challenges.snake-game.views/w, :file "src\\cljs\\coding_challenges\\snake-game\\views.cljs", :line 13, :column 1, :end-line 13, :end-column 7, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\snake-game\\views.cljs", :line 13, :column 6, :end-line 13, :end-column 7}}, update* {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\snake-game\\views.cljs", :line 48, :column 7, :end-line 48, :end-column 14, :arglists (quote ([sketch]))}, :name coding-challenges.snake-game.views/update*, :variadic false, :file "src\\cljs\\coding_challenges\\snake-game\\views.cljs", :end-column 14, :method-params ([sketch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 48, :end-line 48, :max-fixed-arity 1, :fn-var true, :arglists (quote ([sketch]))}, update-food {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\snake-game\\views.cljs", :line 38, :column 7, :end-line 38, :end-column 18, :arglists (quote ([sketch]))}, :name coding-challenges.snake-game.views/update-food, :variadic false, :file "src\\cljs\\coding_challenges\\snake-game\\views.cljs", :end-column 18, :method-params ([sketch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 1, :fn-var true, :arglists (quote ([sketch]))}, turn-snake? {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\snake-game\\views.cljs", :line 66, :column 7, :end-line 66, :end-column 18, :arglists (quote ([nxd nyd sketch])), :doc "Change direction only if next position doesn't result in death."}, :name coding-challenges.snake-game.views/turn-snake?, :variadic false, :file "src\\cljs\\coding_challenges\\snake-game\\views.cljs", :end-column 18, :method-params ([nxd nyd sketch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 66, :end-line 66, :max-fixed-arity 3, :fn-var true, :arglists (quote ([nxd nyd sketch])), :doc "Change direction only if next position doesn't result in death."}, pathcache33379 {:name coding-challenges.snake-game.views/pathcache33379, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\snake-game\\views.cljs", :line 33, :column 7}, setup {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\snake-game\\views.cljs", :line 23, :column 7, :end-line 23, :end-column 12, :arglists (quote ([]))}, :name coding-challenges.snake-game.views/setup, :variadic false, :file "src\\cljs\\coding_challenges\\snake-game\\views.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, increase-snake-tail {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\snake-game\\views.cljs", :line 111, :column 7, :end-line 111, :end-column 26, :arglists (quote ([sketch]))}, :name coding-challenges.snake-game.views/increase-snake-tail, :variadic false, :file "src\\cljs\\coding_challenges\\snake-game\\views.cljs", :end-column 26, :method-params ([sketch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 111, :end-line 111, :max-fixed-arity 1, :fn-var true, :arglists (quote ([sketch]))}, pathcache33396 {:name coding-challenges.snake-game.views/pathcache33396, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\snake-game\\views.cljs", :line 70, :column 7}, update-snake {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\snake-game\\views.cljs", :line 31, :column 7, :end-line 31, :end-column 19, :arglists (quote ([sketch]))}, :name coding-challenges.snake-game.views/update-snake, :variadic false, :file "src\\cljs\\coding_challenges\\snake-game\\views.cljs", :end-column 19, :method-params ([sketch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 1, :fn-var true, :arglists (quote ([sketch]))}, h {:name coding-challenges.snake-game.views/h, :file "src\\cljs\\coding_challenges\\snake-game\\views.cljs", :line 14, :column 1, :end-line 14, :end-column 7, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\snake-game\\views.cljs", :line 14, :column 6, :end-line 14, :end-column 7}}, key-pressed {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\snake-game\\views.cljs", :line 91, :column 7, :end-line 91, :end-column 18, :arglists (quote ([sketch event]))}, :name coding-challenges.snake-game.views/key-pressed, :variadic false, :file "src\\cljs\\coding_challenges\\snake-game\\views.cljs", :end-column 18, :method-params ([sketch event]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 91, :end-line 91, :max-fixed-arity 2, :fn-var true, :arglists (quote ([sketch event]))}, pathcache33408 {:name coding-challenges.snake-game.views/pathcache33408, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\snake-game\\views.cljs", :line 113, :column 7}}, :require-macros {q quil.core, quil.core quil.core, reagent reagent.core, reagent.core reagent.core, sp com.rpl.specter, com.rpl.specter com.rpl.specter}, :cljs.analyzer/constants {:seen #{:y com.rpl.specter :snake-game :setval :down :children :align :mouse-clicked :select-one :fn :sketch :pre :key :snake :else :tabs :scale :ns :name :w :component-did-mount :file :end-column :width :type :update collect-one :s :up :size :column :center :setup :middleware :level :host :food :code.javascript Food :canvas#snake-game :reagent-render :line :key-pressed com.rpl.specter/collect-one :tail :label :id :code :xspeed :end-line :right :host-id :no-start :d :x :draw :arglists :on-change :doc :level1 :test :code.clojure :a :height :left :yspeed :model}, :order [:type :x :y Food com.rpl.specter/collect-one :ns :name :file :end-column :column :line :end-line :arglists :doc :test com.rpl.specter collect-one :scale :food :snake :xspeed :yspeed :tail :key :up :w :down :s :left :a :right :d :else :mouse-clicked :update :size :setup :middleware :host :key-pressed :no-start :draw :fn :host-id :reagent-render :component-did-mount :select-one :snake-game :code :align :center :children :sketch :label :level :level1 :canvas#snake-game :width :height :tabs :id :model :on-change :setval :pre :code.clojure :code.javascript]}, :doc nil}