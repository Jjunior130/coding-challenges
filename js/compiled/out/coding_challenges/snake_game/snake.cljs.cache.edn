{:rename-macros {}, :renames {}, :use-macros {setval com.rpl.specter, transform com.rpl.specter, putval com.rpl.specter, collect-one com.rpl.specter, ALL com.rpl.specter}, :excludes #{}, :name coding-challenges.snake-game.snake, :imports nil, :requires {q quil.core, quil.core quil.core, sp com.rpl.specter, com.rpl.specter com.rpl.specter}, :uses {putval com.rpl.specter, collect-one com.rpl.specter, ALL com.rpl.specter}, :defs {draw {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\snake-game\\snake.cljs", :line 59, :column 7, :end-line 59, :end-column 11, :arglists (quote ([scl snake]))}, :name coding-challenges.snake-game.snake/draw, :variadic false, :file "src\\cljs\\coding_challenges\\snake-game\\snake.cljs", :end-column 11, :method-params ([scl snake]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 2, :fn-var true, :arglists (quote ([scl snake]))}, pathcache141734 {:name coding-challenges.snake-game.snake/pathcache141734, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\snake-game\\snake.cljs", :line 26, :column 7}, pathcache141792 {:name coding-challenges.snake-game.snake/pathcache141792, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\snake-game\\snake.cljs", :line 68, :column 7}, pathcache141783 {:name coding-challenges.snake-game.snake/pathcache141783, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\snake-game\\snake.cljs", :line 69, :column 7}, make {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\snake-game\\snake.cljs", :line 5, :column 7, :end-line 5, :end-column 11, :arglists (quote ([] [x y xv yv])), :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([] [x y xv yv]), :arglists ([] [x y xv yv]), :arglists-meta (nil nil)}}, :name coding-challenges.snake-game.snake/make, :variadic false, :file "src\\cljs\\coding_challenges\\snake-game\\snake.cljs", :end-column 11, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([] [x y xv yv]), :arglists ([] [x y xv yv]), :arglists-meta (nil nil)}, :method-params ([] [x y xv yv]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 4, :fn-var true, :arglists ([] [x y xv yv])}, death? {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\snake-game\\snake.cljs", :line 21, :column 7, :end-line 21, :end-column 13, :arglists (quote ([tail x y]))}, :name coding-challenges.snake-game.snake/death?, :variadic false, :file "src\\cljs\\coding_challenges\\snake-game\\snake.cljs", :end-column 13, :method-params ([tail x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 3, :fn-var true, :arglists (quote ([tail x y]))}, pathcache141743 {:name coding-challenges.snake-game.snake/pathcache141743, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\snake-game\\snake.cljs", :line 50, :column 7}, dir {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\snake-game\\snake.cljs", :line 66, :column 7, :end-line 66, :end-column 10, :arglists (quote ([x y snake]))}, :name coding-challenges.snake-game.snake/dir, :variadic false, :file "src\\cljs\\coding_challenges\\snake-game\\snake.cljs", :end-column 10, :method-params ([x y snake]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 66, :end-line 66, :max-fixed-arity 3, :fn-var true, :arglists (quote ([x y snake]))}, update-tail {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\snake-game\\snake.cljs", :line 24, :column 7, :end-line 24, :end-column 18, :arglists (quote ([scl food snake]))}, :name coding-challenges.snake-game.snake/update-tail, :variadic false, :file "src\\cljs\\coding_challenges\\snake-game\\snake.cljs", :end-column 18, :method-params ([scl food snake]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 3, :fn-var true, :arglists (quote ([scl food snake]))}, update* {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\snake-game\\snake.cljs", :line 54, :column 7, :end-line 54, :end-column 14, :arglists (quote ([scl food snake]))}, :name coding-challenges.snake-game.snake/update*, :variadic false, :file "src\\cljs\\coding_challenges\\snake-game\\snake.cljs", :end-column 14, :method-params ([scl food snake]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 3, :fn-var true, :arglists (quote ([scl food snake]))}, pathcache141731 {:name coding-challenges.snake-game.snake/pathcache141731, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\snake-game\\snake.cljs", :line 26, :column 7}, pathcache141746 {:name coding-challenges.snake-game.snake/pathcache141746, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\snake-game\\snake.cljs", :line 47, :column 7}, move-forward {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\snake-game\\snake.cljs", :line 45, :column 7, :end-line 45, :end-column 19, :arglists (quote ([scl snake]))}, :name coding-challenges.snake-game.snake/move-forward, :variadic false, :file "src\\cljs\\coding_challenges\\snake-game\\snake.cljs", :end-column 19, :method-params ([scl snake]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 2, :fn-var true, :arglists (quote ([scl snake]))}, pathcache141752 {:name coding-challenges.snake-game.snake/pathcache141752, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\snake-game\\snake.cljs", :line 47, :column 7}, eat? {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\snake-game\\snake.cljs", :line 16, :column 7, :end-line 16, :end-column 11, :arglists (quote ([food snake]))}, :name coding-challenges.snake-game.snake/eat?, :variadic false, :file "src\\cljs\\coding_challenges\\snake-game\\snake.cljs", :end-column 11, :method-params ([food snake]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 2, :fn-var true, :arglists (quote ([food snake]))}, pathcache141749 {:name coding-challenges.snake-game.snake/pathcache141749, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\snake-game\\snake.cljs", :line 50, :column 7}, pathcache141786 {:name coding-challenges.snake-game.snake/pathcache141786, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\snake-game\\snake.cljs", :line 68, :column 7}, pathcache141789 {:name coding-challenges.snake-game.snake/pathcache141789, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\snake-game\\snake.cljs", :line 69, :column 7}}, :require-macros {q quil.core, quil.core quil.core, sp com.rpl.specter, com.rpl.specter com.rpl.specter}, :cljs.analyzer/constants {:seen #{:y com.rpl.specter :else :ns :name :file :end-column :type collect-one :column :line com.rpl.specter/collect-one :tail :xspeed :end-line :x :arglists :doc Snake :test :yspeed}, :order [:type :x :y :xspeed :yspeed :tail Snake com.rpl.specter/collect-one :ns :name :file :end-column :column :line :end-line :arglists :doc :test com.rpl.specter collect-one :else]}, :doc nil}