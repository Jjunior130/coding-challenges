{:rename-macros {}, :renames {}, :use-macros {setval com.rpl.specter, transform com.rpl.specter, putval com.rpl.specter, collect-one com.rpl.specter, ALL com.rpl.specter}, :excludes #{}, :name coding-challenges.snake-game.snake, :imports nil, :requires {q quil.core, quil.core quil.core, sp com.rpl.specter, com.rpl.specter com.rpl.specter}, :uses {putval com.rpl.specter, collect-one com.rpl.specter, ALL com.rpl.specter}, :defs {draw {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\snake-game\\snake.cljs", :line 66, :column 7, :end-line 66, :end-column 11, :arglists (quote ([scl {sx :x, sy :y, :as snake}]))}, :name coding-challenges.snake-game.snake/draw, :variadic false, :file "src\\cljs\\coding_challenges\\snake-game\\snake.cljs", :end-column 11, :method-params ([scl p__35456]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 66, :end-line 66, :max-fixed-arity 2, :fn-var true, :arglists (quote ([scl {sx :x, sy :y, :as snake}]))}, pathcache35492 {:name coding-challenges.snake-game.snake/pathcache35492, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\snake-game\\snake.cljs", :line 77, :column 7}, pathcache35435 {:name coding-challenges.snake-game.snake/pathcache35435, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\snake-game\\snake.cljs", :line 33, :column 7}, make {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\snake-game\\snake.cljs", :line 7, :column 7, :end-line 7, :end-column 11, :arglists (quote ([] [x y xv yv])), :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([] [x y xv yv]), :arglists ([] [x y xv yv]), :arglists-meta (nil nil)}}, :name coding-challenges.snake-game.snake/make, :variadic false, :file "src\\cljs\\coding_challenges\\snake-game\\snake.cljs", :end-column 11, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([] [x y xv yv]), :arglists ([] [x y xv yv]), :arglists-meta (nil nil)}, :method-params ([] [x y xv yv]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 4, :fn-var true, :arglists ([] [x y xv yv])}, death? {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\snake-game\\snake.cljs", :line 28, :column 7, :end-line 28, :end-column 13, :arglists (quote ([tail x y]))}, :name coding-challenges.snake-game.snake/death?, :variadic false, :file "src\\cljs\\coding_challenges\\snake-game\\snake.cljs", :end-column 13, :method-params ([tail x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 3, :fn-var true, :arglists (quote ([tail x y]))}, pathcache35498 {:name coding-challenges.snake-game.snake/pathcache35498, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\snake-game\\snake.cljs", :line 77, :column 7}, dir {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\snake-game\\snake.cljs", :line 75, :column 7, :end-line 75, :end-column 10, :arglists (quote ([x y snake]))}, :name coding-challenges.snake-game.snake/dir, :variadic false, :file "src\\cljs\\coding_challenges\\snake-game\\snake.cljs", :end-column 10, :method-params ([x y snake]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 75, :end-line 75, :max-fixed-arity 3, :fn-var true, :arglists (quote ([x y snake]))}, pathcache35495 {:name coding-challenges.snake-game.snake/pathcache35495, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\snake-game\\snake.cljs", :line 78, :column 7}, update-tail {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\snake-game\\snake.cljs", :line 31, :column 7, :end-line 31, :end-column 18, :arglists (quote ([scl food snake]))}, :name coding-challenges.snake-game.snake/update-tail, :variadic false, :file "src\\cljs\\coding_challenges\\snake-game\\snake.cljs", :end-column 18, :method-params ([scl food snake]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 3, :fn-var true, :arglists (quote ([scl food snake]))}, update* {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\snake-game\\snake.cljs", :line 61, :column 7, :end-line 61, :end-column 14, :arglists (quote ([scl food snake]))}, :name coding-challenges.snake-game.snake/update*, :variadic false, :file "src\\cljs\\coding_challenges\\snake-game\\snake.cljs", :end-column 14, :method-params ([scl food snake]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 61, :max-fixed-arity 3, :fn-var true, :arglists (quote ([scl food snake]))}, move-forward {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\snake-game\\snake.cljs", :line 52, :column 7, :end-line 52, :end-column 19, :arglists (quote ([scl snake]))}, :name coding-challenges.snake-game.snake/move-forward, :variadic false, :file "src\\cljs\\coding_challenges\\snake-game\\snake.cljs", :end-column 19, :method-params ([scl snake]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 2, :fn-var true, :arglists (quote ([scl snake]))}, pathcache35450 {:name coding-challenges.snake-game.snake/pathcache35450, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\snake-game\\snake.cljs", :line 57, :column 7}, pathcache35432 {:name coding-challenges.snake-game.snake/pathcache35432, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\snake-game\\snake.cljs", :line 33, :column 7}, pathcache35489 {:name coding-challenges.snake-game.snake/pathcache35489, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\snake-game\\snake.cljs", :line 78, :column 7}, eat? {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\snake-game\\snake.cljs", :line 18, :column 7, :end-line 18, :end-column 11, :arglists (quote ([{fx :x, fy :y, :as food} {sx :x, sy :y, :as snake}]))}, :name coding-challenges.snake-game.snake/eat?, :variadic false, :file "src\\cljs\\coding_challenges\\snake-game\\snake.cljs", :end-column 11, :method-params ([p__35422 p__35423]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{fx :x, fy :y, :as food} {sx :x, sy :y, :as snake}]))}, pathcache35453 {:name coding-challenges.snake-game.snake/pathcache35453, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\snake-game\\snake.cljs", :line 54, :column 7}, pathcache35447 {:name coding-challenges.snake-game.snake/pathcache35447, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\snake-game\\snake.cljs", :line 54, :column 7}, pathcache35444 {:name coding-challenges.snake-game.snake/pathcache35444, :cljs.analyzer/no-resolve true, :no-doc true, :meta {:cljs.analyzer/no-resolve true, :no-doc true, :file nil}, :file "src\\cljs\\coding_challenges\\snake-game\\snake.cljs", :line 57, :column 7}}, :require-macros {q quil.core, quil.core quil.core, sp com.rpl.specter, com.rpl.specter com.rpl.specter}, :cljs.analyzer/constants {:seen #{:y com.rpl.specter :else :ns :name :file :end-column :type collect-one :column :line com.rpl.specter/collect-one :tail :xspeed :end-line :x :arglists :doc Snake :test :yspeed}, :order [:type :x :y :xspeed :yspeed :tail Snake com.rpl.specter/collect-one :ns :name :file :end-column :column :line :end-line :arglists :doc :test com.rpl.specter collect-one :else]}, :doc nil}