{:rename-macros {}, :renames {}, :use-macros {go cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name coding-challenges.socket, :imports nil, :requires {re-frame.core re-frame.core, async cljs.core.async, cljs.core.async cljs.core.async, sente taoensso.sente, taoensso.sente taoensso.sente}, :uses {<! cljs.core.async, chan cljs.core.async, >! cljs.core.async, dispatch re-frame.core, put! cljs.core.async}, :defs {sente-socket {:name coding-challenges.socket/sente-socket, :file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\socket.cljs", :line 10, :column 1, :end-line 10, :end-column 22, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\socket.cljs", :line 10, :column 10, :end-line 10, :end-column 22}}, chsk {:name coding-challenges.socket/chsk, :file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\socket.cljs", :line 18, :column 3, :end-line 18, :end-column 12, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\socket.cljs", :line 18, :column 8, :end-line 18, :end-column 12}}, ch-chsk {:name coding-challenges.socket/ch-chsk, :file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\socket.cljs", :line 19, :column 3, :end-line 19, :end-column 15, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\socket.cljs", :line 19, :column 8, :end-line 19, :end-column 15}}, chsk-send! {:name coding-challenges.socket/chsk-send!, :file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\socket.cljs", :line 20, :column 3, :end-line 20, :end-column 18, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\socket.cljs", :line 20, :column 8, :end-line 20, :end-column 18}}, chsk-state {:name coding-challenges.socket/chsk-state, :file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\socket.cljs", :line 21, :column 3, :end-line 21, :end-column 18, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\socket.cljs", :line 21, :column 8, :end-line 21, :end-column 18}}, handle-event {:name coding-challenges.socket/handle-event, :file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\socket.cljs", :line 24, :column 1, :end-line 24, :end-column 23, :doc "Handle events based on the event Id.", :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\socket.cljs", :line 24, :column 11, :end-line 24, :end-column 23, :doc "Handle events based on the event Id."}}, test-session {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\socket.cljs", :line 50, :column 7, :end-line 50, :end-column 19, :arglists (quote ([])), :doc "Ping the server."}, :name coding-challenges.socket/test-session, :variadic false, :file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\socket.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Ping the server."}, event-loop {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\socket.cljs", :line 55, :column 7, :end-line 55, :end-column 17, :arglists (quote ([])), :doc "Handle inbound events."}, :name coding-challenges.socket/event-loop, :variadic false, :file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\socket.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Handle inbound events."}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, sente taoensso.sente, taoensso.sente taoensso.sente}, :cljs.analyzer/constants {:seen #{:ping :setval :ch-recv :else :default :server :test/reply :client/ping :client/server-state :recur :type :state :client/connections :event :chsk-url-fn :chsk :connections :send-fn :session/status :hierarchy :auto :server-state}, :order [:type :chsk-url-fn :auto :chsk :ch-recv :send-fn :state :hierarchy :default :client/server-state :server-state :client/ping :setval :server :ping :client/connections :connections :test/reply :session/status :event :recur :else]}, :doc nil}