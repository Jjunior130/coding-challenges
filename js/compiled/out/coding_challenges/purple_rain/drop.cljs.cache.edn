{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name coding-challenges.purple-rain.drop, :imports nil, :requires {q quil.core, quil.core quil.core}, :uses nil, :defs {make {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\purple-rain\\drop.cljs", :line 4, :column 7, :end-line 4, :end-column 11, :arglists (quote ([]))}, :name coding-challenges.purple-rain.drop/make, :variadic false, :file "src\\cljs\\coding_challenges\\purple-rain\\drop.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 4, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, fall {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\purple-rain\\drop.cljs", :line 12, :column 7, :end-line 12, :end-column 11, :arglists (quote ([{yspeed :yspeed, z :z, :as d}]))}, :name coding-challenges.purple-rain.drop/fall, :variadic false, :file "src\\cljs\\coding_challenges\\purple-rain\\drop.cljs", :end-column 11, :method-params ([p__16008]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{yspeed :yspeed, z :z, :as d}]))}, loop-edge {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\purple-rain\\drop.cljs", :line 20, :column 7, :end-line 20, :end-column 16, :arglists (quote ([{z :z, :as d}]))}, :name coding-challenges.purple-rain.drop/loop-edge, :variadic false, :file "src\\cljs\\coding_challenges\\purple-rain\\drop.cljs", :end-column 16, :method-params ([p__16013]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{z :z, :as d}]))}, update* {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\purple-rain\\drop.cljs", :line 26, :column 7, :end-line 26, :end-column 14, :arglists (quote ([{y :y, :as d}]))}, :name coding-challenges.purple-rain.drop/update*, :variadic false, :file "src\\cljs\\coding_challenges\\purple-rain\\drop.cljs", :end-column 14, :method-params ([p__16018]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{y :y, :as d}]))}, draw {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\src\\cljs\\coding_challenges\\purple-rain\\drop.cljs", :line 32, :column 7, :end-line 32, :end-column 11, :arglists (quote ([{x :x, y :y, z :z, len :len, :as d}]))}, :name coding-challenges.purple-rain.drop/draw, :variadic false, :file "src\\cljs\\coding_challenges\\purple-rain\\drop.cljs", :end-column 11, :method-params ([p__16023]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{x :x, y :y, z :z, len :len, :as d}]))}}, :require-macros {q quil.core, quil.core quil.core}, :cljs.analyzer/constants {:seen #{:y :z :len :x :yspeed}, :order [:x :y :z :len :yspeed]}, :doc nil}