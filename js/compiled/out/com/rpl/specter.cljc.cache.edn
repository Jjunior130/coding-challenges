{:rename-macros {}, :renames {}, :use-macros {defcollector com.rpl.specter, doseqres com.rpl.specter.util-macros, ImplicitNav com.rpl.specter.protocols, richnav com.rpl.specter, dynamicnav com.rpl.specter, RichNavigator com.rpl.specter.protocols, defdynamicnav com.rpl.specter, late-bound-nav com.rpl.specter, late-bound-richnav com.rpl.specter, late-bound-collector com.rpl.specter, defrichnav com.rpl.specter, defnav com.rpl.specter}, :excludes #{}, :name com.rpl.specter, :imports nil, :requires {com.rpl.specter.protocols com.rpl.specter.protocols, i com.rpl.specter.impl, com.rpl.specter.impl com.rpl.specter.impl, n com.rpl.specter.navs, com.rpl.specter.navs com.rpl.specter.navs, set clojure.set, clojure.set clojure.set}, :uses {ImplicitNav com.rpl.specter.protocols, RichNavigator com.rpl.specter.protocols}, :defs {srange-select* {:no-doc true, :protocol-inline nil, :meta {:no-doc true, :arglists (quote ([start end structure next-fn])), :file nil}, :name com.rpl.specter/srange-select*, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([start end structure next-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 657, :max-fixed-arity 4, :fn-var true, :arglists (quote ([start end structure next-fn]))}, compiled-select-one {:name com.rpl.specter/compiled-select-one, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 440, :column 1, :end-line 441, :end-column 22, :doc "Version of select-one that takes in a path precompiled with comp-paths", :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 441, :column 3, :end-line 441, :end-column 22, :doc "Version of select-one that takes in a path precompiled with comp-paths"}}, select-first* {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 460, :column 7, :end-line 460, :end-column 20, :arglists (quote ([path structure])), :doc "Returns first element found."}, :name com.rpl.specter/select-first*, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :end-column 20, :method-params ([path structure]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 460, :end-line 460, :max-fixed-arity 2, :fn-var true, :arglists (quote ([path structure])), :doc "Returns first element found."}, comp-paths {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 423, :column 7, :end-line 423, :end-column 17, :arglists (quote ([& apath])), :doc "Returns a compiled version of the given path for use with\n   compiled-{select/transform/setval/etc.} functions.", :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(apath)], :arglists ([& apath]), :arglists-meta (nil)}}, :name com.rpl.specter/comp-paths, :variadic true, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(apath)], :arglists ([& apath]), :arglists-meta (nil)}, :method-params [(apath)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 423, :end-line 423, :max-fixed-arity 0, :fn-var true, :arglists ([& apath]), :doc "Returns a compiled version of the given path for use with\n   compiled-{select/transform/setval/etc.} functions."}, ->t_com$rpl$specter12896 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([pred meta12897])), :file nil}, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/->t_com$rpl$specter12896, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([pred meta12897]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 668, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pred meta12897])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, dynamic-param? {:name com.rpl.specter/dynamic-param?, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 544, :column 1, :end-line 544, :end-column 20, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 544, :column 6, :end-line 544, :end-column 20}}, parser-select* {:no-doc true, :protocol-inline nil, :meta {:no-doc true, :arglists (quote ([parse-fn unparse-fn structure next-fn])), :file nil}, :name com.rpl.specter/parser-select*, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([parse-fn unparse-fn structure next-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 786, :max-fixed-arity 4, :fn-var true, :arglists (quote ([parse-fn unparse-fn structure next-fn]))}, continuous-subseqs {:name com.rpl.specter/continuous-subseqs, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 668, :column 1, :end-line 670, :end-column 21, :doc "Navigates to every continuous subsequence of elements matching `pred`", :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 670, :column 3, :end-line 670, :end-column 21, :doc "Navigates to every continuous subsequence of elements matching `pred`"}}, compiled-selected-any? {:name com.rpl.specter/compiled-selected-any?, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 478, :column 1, :end-line 479, :end-column 25, :doc "Version of selected-any? that takes in a path precompiled with comp-paths", :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 479, :column 3, :end-line 479, :end-column 25, :doc "Version of selected-any? that takes in a path precompiled with comp-paths"}}, multi-transform* {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 512, :column 7, :end-line 512, :end-column 23, :arglists (quote ([path structure])), :doc "Just like `transform` but expects transform functions to be specified\n   inline in the path using `terminal`. Error is thrown if navigation finishes\n   at a non-`terminal` navigator. `terminal-val` is a wrapper around `terminal` and is\n   the `multi-transform` equivalent of `setval`."}, :name com.rpl.specter/multi-transform*, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :end-column 23, :method-params ([path structure]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 512, :end-line 512, :max-fixed-arity 2, :fn-var true, :arglists (quote ([path structure])), :doc "Just like `transform` but expects transform functions to be specified\n   inline in the path using `terminal`. Error is thrown if navigation finishes\n   at a non-`terminal` navigator. `terminal-val` is a wrapper around `terminal` and is\n   the `multi-transform` equivalent of `setval`."}, submap {:name com.rpl.specter/submap, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 717, :column 1, :end-line 721, :end-column 9, :doc "Navigates to the specified submap (using select-keys).\n          In a transform, that submap in the original map is changed to the new\n          value of the submap.", :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 721, :column 3, :end-line 721, :end-column 9, :doc "Navigates to the specified submap (using select-keys).\n          In a transform, that submap in the original map is changed to the new\n          value of the submap."}}, ->t_com$rpl$specter12933 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta12934])), :file nil}, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/->t_com$rpl$specter12933, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([meta12934]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 798, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta12934])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, selected? {:name com.rpl.specter/selected?, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 809, :column 1, :end-line 809, :end-column 25, :doc "Filters the current value based on whether a path finds anything.\n  e.g. (selected? :vals ALL even?) keeps the current element only if an\n  even number exists for the :vals key.", :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 809, :column 16, :end-line 809, :end-column 25, :doc "Filters the current value based on whether a path finds anything.\n  e.g. (selected? :vals ALL even?) keeps the current element only if an\n  even number exists for the :vals key."}}, t_com$rpl$specter12885 {:num-fields 3, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/t_com$rpl$specter12885, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :type true, :anonymous true, :column 1, :line 657, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, META-select* {:no-doc true, :protocol-inline nil, :meta {:no-doc true, :arglists (quote ([structure next-fn])), :file nil}, :name com.rpl.specter/META-select*, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([structure next-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 923, :max-fixed-arity 2, :fn-var true, :arglists (quote ([structure next-fn]))}, t_com$rpl$specter12903 {:num-fields 1, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/t_com$rpl$specter12903, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :type true, :anonymous true, :column 1, :line 679, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, srange {:name com.rpl.specter/srange, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 657, :column 1, :end-line 660, :end-column 9, :doc "Navigates to the subsequence bound by the indexes start (inclusive)\n          and end (exclusive)", :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 660, :column 3, :end-line 660, :end-column 9, :doc "Navigates to the subsequence bound by the indexes start (inclusive)\n          and end (exclusive)"}}, ->t_com$rpl$specter12909 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([aset meta12910])), :file nil}, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/->t_com$rpl$specter12909, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([aset meta12910]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 701, :max-fixed-arity 2, :fn-var true, :arglists (quote ([aset meta12910])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, compiled-traverse {:name com.rpl.specter/compiled-traverse, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 488, :column 1, :end-line 489, :end-column 20, :doc "Version of traverse that takes in a path precompiled with comp-paths", :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 489, :column 3, :end-line 489, :end-column 20, :doc "Version of traverse that takes in a path precompiled with comp-paths"}}, ->t_com$rpl$specter12967 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([path late meta12968])), :file nil}, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/->t_com$rpl$specter12967, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([path late meta12968]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 937, :max-fixed-arity 3, :fn-var true, :arglists (quote ([path late meta12968])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_com$rpl$specter12879 {:num-fields 1, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/t_com$rpl$specter12879, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :type true, :anonymous true, :column 1, :line 630, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, view {:name com.rpl.specter/view, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 776, :column 1, :end-line 778, :end-column 7, :doc "Navigates to result of running `afn` on the currently navigated value.", :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 778, :column 3, :end-line 778, :end-column 7, :doc "Navigates to result of running `afn` on the currently navigated value."}}, t_com$rpl$specter12964 {:num-fields 1, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/t_com$rpl$specter12964, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :type true, :anonymous true, :column 1, :line 923, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ATOM {:name com.rpl.specter/ATOM, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 798, :column 1, :end-line 800, :end-column 7, :doc "Navigates to atom value.", :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 800, :column 3, :end-line 800, :end-column 7, :doc "Navigates to atom value."}}, BEGINNING {:name com.rpl.specter/BEGINNING, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 679, :column 1, :end-line 681, :end-column 12, :doc "Navigate to the empty subsequence before the first element of the collection.", :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 681, :column 3, :end-line 681, :end-column 12, :doc "Navigate to the empty subsequence before the first element of the collection."}}, select-any* {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 472, :column 7, :end-line 472, :end-column 18, :arglists (quote ([path structure])), :doc "Returns any element found or [[NONE]] if nothing selected. This is the most\n   efficient of the various selection operations."}, :name com.rpl.specter/select-any*, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :end-column 18, :method-params ([path structure]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 472, :end-line 472, :max-fixed-arity 2, :fn-var true, :arglists (quote ([path structure])), :doc "Returns any element found or [[NONE]] if nothing selected. This is the most\n   efficient of the various selection operations."}, LAST {:name com.rpl.specter/LAST, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 634, :column 1, :end-line 637, :end-column 7, :doc "Navigate to the last element of the collection. If the collection is\n          empty navigation is stopped at this point.", :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 637, :column 3, :end-line 637, :end-column 7, :doc "Navigate to the last element of the collection. If the collection is\n          empty navigation is stopped at this point."}}, ->t_com$rpl$specter12873 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta12874])), :file nil}, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/->t_com$rpl$specter12873, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([meta12874]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 607, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta12874])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, late-resolved-fn {:name com.rpl.specter/late-resolved-fn, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 545, :column 1, :end-line 545, :end-column 22, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 545, :column 6, :end-line 545, :end-column 22}}, stay-then-continue {:name com.rpl.specter/stay-then-continue, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 1059, :column 1, :end-line 1059, :end-column 34, :doc "Navigates to the current element and then navigates via the provided path.\n   This can be used to implement pre-order traversal.", :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 1059, :column 16, :end-line 1059, :end-column 34, :doc "Navigates to the current element and then navigates via the provided path.\n   This can be used to implement pre-order traversal."}}, STOP {:name com.rpl.specter/STOP, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 571, :column 1, :end-line 574, :end-column 7, :doc "Stops navigation at this point. For selection returns nothing and for\n          transformation returns the structure unchanged", :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 574, :column 3, :end-line 574, :end-column 7, :doc "Stops navigation at this point. For selection returns nothing and for\n          transformation returns the structure unchanged"}}, STOP-select* {:no-doc true, :protocol-inline nil, :meta {:no-doc true, :arglists (quote ([structure next-fn])), :file nil}, :name com.rpl.specter/STOP-select*, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([structure next-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 571, :max-fixed-arity 2, :fn-var true, :arglists (quote ([structure next-fn]))}, NIL->SET {:name com.rpl.specter/NIL->SET, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 905, :column 1, :end-line 908, :end-column 11, :doc "Navigates to #{} if the value is nil. Otherwise it stays\n          navigated at the current value.", :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 908, :column 3, :end-line 908, :end-column 11, :doc "Navigates to #{} if the value is nil. Otherwise it stays\n          navigated at the current value."}}, t_com$rpl$specter12955 {:num-fields 5, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/t_com$rpl$specter12955, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :type true, :anonymous true, :column 3, :line 854, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_com$rpl$specter12870 {:num-fields 2, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/t_com$rpl$specter12870, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :type true, :anonymous true, :column 3, :line 594, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, srange-dynamic {:name com.rpl.specter/srange-dynamic, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 646, :column 1, :end-line 649, :end-column 17, :doc "Uses start-fn and end-fn to determine the bounds of the subsequence\n          to select when navigating. Each function takes in the structure as input.", :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 649, :column 3, :end-line 649, :end-column 17, :doc "Uses start-fn and end-fn to determine the bounds of the subsequence\n          to select when navigating. Each function takes in the structure as input."}}, compiled-setval {:name com.rpl.specter/compiled-setval, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 521, :column 1, :end-line 522, :end-column 18, :doc "Version of setval that takes in a path precompiled with comp-paths", :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 522, :column 3, :end-line 522, :end-column 18, :doc "Version of setval that takes in a path precompiled with comp-paths"}}, ->t_com$rpl$specter12921 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([path late meta12922])), :file nil}, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/->t_com$rpl$specter12921, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([path late meta12922]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 759, :max-fixed-arity 3, :fn-var true, :arglists (quote ([path late meta12922])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_com$rpl$specter12987 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([cond-p then-path else-path temp__4655__auto__ afn late-then late-else meta12988])), :file nil}, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/->t_com$rpl$specter12987, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([cond-p then-path else-path temp__4655__auto__ afn late-then late-else meta12988]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 980, :max-fixed-arity 8, :fn-var true, :arglists (quote ([cond-p then-path else-path temp__4655__auto__ afn late-then late-else meta12988])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, terminal {:name com.rpl.specter/terminal, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 588, :column 1, :end-line 593, :end-column 11, :doc "For usage with `multi-transform`, defines an endpoint in the navigation\n          that will have the parameterized transform function run. The transform\n          function works just like it does in `transform`, with collected values\n          given as the first arguments", :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 593, :column 3, :end-line 593, :end-column 11, :doc "For usage with `multi-transform`, defines an endpoint in the navigation\n          that will have the parameterized transform function run. The transform\n          function works just like it does in `transform`, with collected values\n          given as the first arguments"}}, multi-path {:name com.rpl.specter/multi-path, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 1038, :column 1, :end-line 1038, :end-column 26, :doc "A path that branches on multiple paths. For updates,\n   applies updates to the paths in order.", :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 1038, :column 16, :end-line 1038, :end-column 26, :doc "A path that branches on multiple paths. For updates,\n   applies updates to the paths in order."}}, DISPENSE {:name com.rpl.specter/DISPENSE, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 965, :column 1, :end-line 967, :end-column 11, :doc "Drops all collected values for subsequent navigation.", :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 967, :column 3, :end-line 967, :end-column 11, :doc "Drops all collected values for subsequent navigation."}}, eachnav {:name com.rpl.specter/eachnav, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 548, :column 1, :end-line 552, :end-column 10, :doc "Turns a navigator that takes one argument into a navigator that takes\n          many arguments and uses the same navigator with each argument. There\n          is no performance cost to using this. See implementation of `keypath`", :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 552, :column 3, :end-line 552, :end-column 10, :doc "Turns a navigator that takes one argument into a navigator that takes\n          many arguments and uses the same navigator with each argument. There\n          is no performance cost to using this. See implementation of `keypath`"}}, nil->val {:name com.rpl.specter/nil->val, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 895, :column 1, :end-line 898, :end-column 11, :doc "Navigates to the provided val if the structure is nil. Otherwise it stays\n          navigated at the structure.", :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 898, :column 3, :end-line 898, :end-column 11, :doc "Navigates to the provided val if the structure is nil. Otherwise it stays\n          navigated at the structure."}}, MAP-VALS-select* {:no-doc true, :protocol-inline nil, :meta {:no-doc true, :arglists (quote ([structure next-fn])), :file nil}, :name com.rpl.specter/MAP-VALS-select*, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([structure next-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 617, :max-fixed-arity 2, :fn-var true, :arglists (quote ([structure next-fn]))}, selected-any?* {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 481, :column 7, :end-line 481, :end-column 21, :arglists (quote ([path structure])), :doc "Returns true if any element was selected, false otherwise."}, :name com.rpl.specter/selected-any?*, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :end-column 21, :method-params ([path structure]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 481, :end-line 481, :max-fixed-arity 2, :fn-var true, :arglists (quote ([path structure])), :doc "Returns true if any element was selected, false otherwise."}, ->t_com$rpl$specter12918 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([afn meta12919])), :file nil}, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/->t_com$rpl$specter12918, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([afn meta12919]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 742, :max-fixed-arity 2, :fn-var true, :arglists (quote ([afn meta12919])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_com$rpl$specter12982 {:num-fields 1, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/t_com$rpl$specter12982, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :type true, :anonymous true, :column 1, :line 965, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_com$rpl$specter12973 {:num-fields 3, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/t_com$rpl$specter12973, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :type true, :anonymous true, :column 3, :line 947, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, putval {:name com.rpl.specter/putval, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 952, :column 1, :end-line 960, :end-column 9, :doc "Adds an external value to the collected vals. Useful when additional arguments\n     are required to the transform function that would otherwise require partial\n     application or a wrapper function.\n\n     e.g., incrementing val at path [:a :b] by 3:\n     (transform [:a :b (putval 3)] + some-map)", :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 960, :column 3, :end-line 960, :end-column 9, :doc "Adds an external value to the collected vals. Useful when additional arguments\n     are required to the transform function that would otherwise require partial\n     application or a wrapper function.\n\n     e.g., incrementing val at path [:a :b] by 3:\n     (transform [:a :b (putval 3)] + some-map)"}}, ALL-transform* {:no-doc true, :protocol-inline nil, :meta {:no-doc true, :arglists (quote ([structure next-fn])), :file nil}, :name com.rpl.specter/ALL-transform*, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([structure next-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 607, :max-fixed-arity 2, :fn-var true, :arglists (quote ([structure next-fn]))}, codewalker {:name com.rpl.specter/codewalker, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 742, :column 1, :end-line 744, :end-column 13, :doc "Like `walker` but maintains metadata of any forms traversed.", :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 744, :column 3, :end-line 744, :end-column 13, :doc "Like `walker` but maintains metadata of any forms traversed."}}, nil->val-select* {:no-doc true, :protocol-inline nil, :meta {:no-doc true, :arglists (quote ([v structure next-fn])), :file nil}, :name com.rpl.specter/nil->val-select*, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([v structure next-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 895, :max-fixed-arity 3, :fn-var true, :arglists (quote ([v structure next-fn]))}, ->t_com$rpl$specter12958 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([path reduce-fn late late-fn meta12959])), :file nil}, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/->t_com$rpl$specter12958, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([path reduce-fn late late-fn meta12959]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 865, :max-fixed-arity 5, :fn-var true, :arglists (quote ([path reduce-fn late late-fn meta12959])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, continue-then-stay {:name com.rpl.specter/continue-then-stay, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 1065, :column 1, :end-line 1065, :end-column 34, :doc "Navigates to the provided path and then to the current element. This can be used\n   to implement post-order traversal.", :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 1065, :column 16, :end-line 1065, :end-column 34, :doc "Navigates to the provided path and then to the current element. This can be used\n   to implement post-order traversal."}}, ->t_com$rpl$specter12930 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([parse-fn unparse-fn meta12931])), :file nil}, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/->t_com$rpl$specter12930, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([parse-fn unparse-fn meta12931]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 786, :max-fixed-arity 3, :fn-var true, :arglists (quote ([parse-fn unparse-fn meta12931])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, must {:name com.rpl.specter/must, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 773, :column 1, :end-line 773, :end-column 10, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 773, :column 6, :end-line 773, :end-column 10}}, traversed {:name com.rpl.specter/traversed, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 861, :column 1, :end-line 861, :end-column 25, :doc "Navigates to a view of the current value by transforming with a reduction over\n   the specified traversal.", :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 861, :column 16, :end-line 861, :end-column 25, :doc "Navigates to a view of the current value by transforming with a reduction over\n   the specified traversal."}}, BEGINNING-transform* {:no-doc true, :protocol-inline nil, :meta {:no-doc true, :arglists (quote ([structure next-fn])), :file nil}, :name com.rpl.specter/BEGINNING-transform*, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([structure next-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 679, :max-fixed-arity 2, :fn-var true, :arglists (quote ([structure next-fn]))}, ->t_com$rpl$specter13001 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([path1 path2 late1 late2 meta13002])), :file nil}, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/->t_com$rpl$specter13001, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([path1 path2 late1 late2 meta13002]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 4, :factory :positional, :line 1044, :max-fixed-arity 5, :fn-var true, :arglists (quote ([path1 path2 late1 late2 meta13002])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, walker-transform* {:no-doc true, :protocol-inline nil, :meta {:no-doc true, :arglists (quote ([afn structure next-fn])), :file nil}, :name com.rpl.specter/walker-transform*, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([afn structure next-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 732, :max-fixed-arity 3, :fn-var true, :arglists (quote ([afn structure next-fn]))}, ->t_com$rpl$specter12961 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([v meta12962])), :file nil}, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/->t_com$rpl$specter12961, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([v meta12962]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 895, :max-fixed-arity 2, :fn-var true, :arglists (quote ([v meta12962])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_com$rpl$specter12982 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta12983])), :file nil}, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/->t_com$rpl$specter12982, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([meta12983]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 965, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta12983])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, filterer {:name com.rpl.specter/filterer, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 843, :column 1, :end-line 843, :end-column 24, :doc "Navigates to a view of the current sequence that only contains elements that\n  match the given path. An element matches the selector path if calling select\n  on that element with the path yields anything other than an empty sequence.", :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 843, :column 16, :end-line 843, :end-column 24, :doc "Navigates to a view of the current sequence that only contains elements that\n  match the given path. An element matches the selector path if calling select\n  on that element with the path yields anything other than an empty sequence."}}, setval* {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 524, :column 7, :end-line 524, :end-column 14, :arglists (quote ([path val structure])), :doc "Navigates to each value specified by the path and replaces it by val"}, :name com.rpl.specter/setval*, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :end-column 14, :method-params ([path val structure]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 524, :end-line 524, :max-fixed-arity 3, :fn-var true, :arglists (quote ([path val structure])), :doc "Navigates to each value specified by the path and replaces it by val"}, ->t_com$rpl$specter12867 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta12868])), :file nil}, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/->t_com$rpl$specter12867, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([meta12868]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 571, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta12868])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, END-transform* {:no-doc true, :protocol-inline nil, :meta {:no-doc true, :arglists (quote ([structure next-fn])), :file nil}, :name com.rpl.specter/END-transform*, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([structure next-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 690, :max-fixed-arity 2, :fn-var true, :arglists (quote ([structure next-fn]))}, ->t_com$rpl$specter12870 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([afn meta12871])), :file nil}, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/->t_com$rpl$specter12870, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([afn meta12871]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 594, :max-fixed-arity 2, :fn-var true, :arglists (quote ([afn meta12871])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, BEGINNING-select* {:no-doc true, :protocol-inline nil, :meta {:no-doc true, :arglists (quote ([structure next-fn])), :file nil}, :name com.rpl.specter/BEGINNING-select*, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([structure next-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 679, :max-fixed-arity 2, :fn-var true, :arglists (quote ([structure next-fn]))}, subset {:name com.rpl.specter/subset, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 701, :column 1, :end-line 705, :end-column 9, :doc "Navigates to the specified subset (by taking an intersection).\n          In a transform, that subset in the original set is changed to the\n          new value of the subset.", :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 705, :column 3, :end-line 705, :end-column 9, :doc "Navigates to the specified subset (by taking an intersection).\n          In a transform, that subset in the original set is changed to the\n          new value of the subset."}}, ->t_com$rpl$specter12979 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([val meta12980])), :file nil}, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/->t_com$rpl$specter12979, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([val meta12980]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 952, :max-fixed-arity 2, :fn-var true, :arglists (quote ([val meta12980])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, pred {:name com.rpl.specter/pred, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 873, :column 1, :end-line 876, :end-column 7, :doc "Keeps the element only if it matches the supplied predicate. This is the\n          late-bound parameterized version of using a function directly in a path.", :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 876, :column 3, :end-line 876, :end-column 7, :doc "Keeps the element only if it matches the supplied predicate. This is the\n          late-bound parameterized version of using a function directly in a path."}}, NONE {:name com.rpl.specter/NONE, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 468, :column 1, :end-line 470, :end-column 7, :doc "Global value used to indicate no elements selected during\n             [[select-any]].", :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 470, :column 3, :end-line 470, :end-column 7, :doc "Global value used to indicate no elements selected during\n             [[select-any]]."}}, compiled-select-any {:name com.rpl.specter/compiled-select-any, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 465, :column 1, :end-line 466, :end-column 22, :doc "Version of select-any that takes in a path precompiled with comp-paths", :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 466, :column 3, :end-line 466, :end-column 22, :doc "Version of select-any that takes in a path precompiled with comp-paths"}}, transform* {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 502, :column 7, :end-line 502, :end-column 17, :arglists (quote ([path transform-fn structure])), :doc "Navigates to each value specified by the path and replaces it by the result of running\n  the transform-fn on it"}, :name com.rpl.specter/transform*, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :end-column 17, :method-params ([path transform-fn structure]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 502, :end-line 502, :max-fixed-arity 3, :fn-var true, :arglists (quote ([path transform-fn structure])), :doc "Navigates to each value specified by the path and replaces it by the result of running\n  the transform-fn on it"}, t_com$rpl$specter13001 {:num-fields 5, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/t_com$rpl$specter13001, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :type true, :anonymous true, :column 4, :line 1044, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, compiled-select-one! {:name com.rpl.specter/compiled-select-one!, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 448, :column 1, :end-line 449, :end-column 23, :doc "Version of select-one! that takes in a path precompiled with comp-paths", :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 449, :column 3, :end-line 449, :end-column 23, :doc "Version of select-one! that takes in a path precompiled with comp-paths"}}, collect-one {:name com.rpl.specter/collect-one, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 942, :column 1, :end-line 945, :end-column 14, :doc "Adds the result of running select-one with the given path on the\n          current value to the collected vals.", :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 945, :column 3, :end-line 945, :end-column 14, :doc "Adds the result of running select-one with the given path on the\n          current value to the collected vals."}}, NIL->LIST {:name com.rpl.specter/NIL->LIST, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 911, :column 1, :end-line 914, :end-column 12, :doc "Navigates to '() if the value is nil. Otherwise it stays\n          navigated at the current value.", :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 914, :column 3, :end-line 914, :end-column 12, :doc "Navigates to '() if the value is nil. Otherwise it stays\n          navigated at the current value."}}, t_com$rpl$specter12918 {:num-fields 2, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/t_com$rpl$specter12918, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :type true, :anonymous true, :column 1, :line 742, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_com$rpl$specter12933 {:num-fields 1, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/t_com$rpl$specter12933, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :type true, :anonymous true, :column 1, :line 798, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, walker-select* {:no-doc true, :protocol-inline nil, :meta {:no-doc true, :arglists (quote ([afn structure next-fn])), :file nil}, :name com.rpl.specter/walker-select*, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([afn structure next-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 732, :max-fixed-arity 3, :fn-var true, :arglists (quote ([afn structure next-fn]))}, t_com$rpl$specter12896 {:num-fields 2, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/t_com$rpl$specter12896, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :type true, :anonymous true, :column 1, :line 668, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, transformed {:name com.rpl.specter/transformed, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 850, :column 1, :end-line 850, :end-column 27, :doc "Navigates to a view of the current value by transforming it with the\n   specified path and update-fn.", :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 850, :column 16, :end-line 850, :end-column 27, :doc "Navigates to a view of the current value by transforming it with the\n   specified path and update-fn."}}, submap-select* {:no-doc true, :protocol-inline nil, :meta {:no-doc true, :arglists (quote ([m-keys structure next-fn])), :file nil}, :name com.rpl.specter/submap-select*, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([m-keys structure next-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 717, :max-fixed-arity 3, :fn-var true, :arglists (quote ([m-keys structure next-fn]))}, ->t_com$rpl$specter12955 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([path update-fn late late-fn meta12956])), :file nil}, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/->t_com$rpl$specter12955, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([path update-fn late late-fn meta12956]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 854, :max-fixed-arity 5, :fn-var true, :arglists (quote ([path update-fn late late-fn meta12956])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, META-transform* {:no-doc true, :protocol-inline nil, :meta {:no-doc true, :arglists (quote ([structure next-fn])), :file nil}, :name com.rpl.specter/META-transform*, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([structure next-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 923, :max-fixed-arity 2, :fn-var true, :arglists (quote ([structure next-fn]))}, ->t_com$rpl$specter12990 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([cond-p then-path else-path temp__4655__auto__ late-cond late-then late-else meta12991])), :file nil}, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/->t_com$rpl$specter12990, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([cond-p then-path else-path temp__4655__auto__ late-cond late-then late-else meta12991]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 998, :max-fixed-arity 8, :fn-var true, :arglists (quote ([cond-p then-path else-path temp__4655__auto__ late-cond late-then late-else meta12991])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_com$rpl$specter12912 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([m-keys meta12913])), :file nil}, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/->t_com$rpl$specter12912, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([m-keys meta12913]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 717, :max-fixed-arity 2, :fn-var true, :arglists (quote ([m-keys meta12913])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, compiled-select {:name com.rpl.specter/compiled-select, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 431, :column 1, :end-line 432, :end-column 18, :doc "Version of select that takes in a path precompiled with comp-paths", :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 432, :column 3, :end-line 432, :end-column 18, :doc "Version of select that takes in a path precompiled with comp-paths"}}, ->t_com$rpl$specter12973 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([path late meta12974])), :file nil}, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/->t_com$rpl$specter12973, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([path late meta12974]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 947, :max-fixed-arity 3, :fn-var true, :arglists (quote ([path late meta12974])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, select-one!* {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 451, :column 7, :end-line 451, :end-column 19, :arglists (quote ([path structure])), :doc "Returns exactly one element, throws exception if zero or multiple elements found"}, :name com.rpl.specter/select-one!*, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :end-column 19, :method-params ([path structure]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 451, :end-line 451, :max-fixed-arity 2, :fn-var true, :arglists (quote ([path structure])), :doc "Returns exactly one element, throws exception if zero or multiple elements found"}, ->t_com$rpl$specter12946 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([path temp__4655__auto__ late meta12947])), :file nil}, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/->t_com$rpl$specter12946, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([path temp__4655__auto__ late meta12947]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 831, :max-fixed-arity 4, :fn-var true, :arglists (quote ([path temp__4655__auto__ late meta12947])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, MAP-VALS-transform* {:no-doc true, :protocol-inline nil, :meta {:no-doc true, :arglists (quote ([structure next-fn])), :file nil}, :name com.rpl.specter/MAP-VALS-transform*, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([structure next-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 617, :max-fixed-arity 2, :fn-var true, :arglists (quote ([structure next-fn]))}, ->t_com$rpl$specter12915 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([afn meta12916])), :file nil}, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/->t_com$rpl$specter12915, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([afn meta12916]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 732, :max-fixed-arity 2, :fn-var true, :arglists (quote ([afn meta12916])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_com$rpl$specter12938 {:num-fields 4, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/t_com$rpl$specter12938, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :type true, :anonymous true, :column 5, :line 816, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, nil->val-transform* {:no-doc true, :protocol-inline nil, :meta {:no-doc true, :arglists (quote ([v structure next-fn])), :file nil}, :name com.rpl.specter/nil->val-transform*, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([v structure next-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 895, :max-fixed-arity 3, :fn-var true, :arglists (quote ([v structure next-fn]))}, VAL {:name com.rpl.specter/VAL, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 630, :column 1, :end-line 630, :end-column 18, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 630, :column 15, :end-line 630, :end-column 18}}, t_com$rpl$specter12915 {:num-fields 2, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/t_com$rpl$specter12915, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :type true, :anonymous true, :column 1, :line 732, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_com$rpl$specter12930 {:num-fields 3, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/t_com$rpl$specter12930, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :type true, :anonymous true, :column 1, :line 786, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_com$rpl$specter12958 {:num-fields 5, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/t_com$rpl$specter12958, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :type true, :anonymous true, :column 3, :line 865, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, cond-path {:name com.rpl.specter/cond-path, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 1019, :column 1, :end-line 1019, :end-column 25, :doc "Takes in alternating cond-path path cond-path path...\n   Tests the structure if selecting with cond-path returns anything.\n   If so, it uses the following path for this portion of the navigation.\n   Otherwise, it tries the next cond-path. If nothing matches, then the structure\n   is not selected.\n\n   The input paths may be parameterized, in which case the result of cond-path\n   will be parameterized in the order of which the parameterized navigators\n   were declared.", :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 1019, :column 16, :end-line 1019, :end-column 25, :doc "Takes in alternating cond-path path cond-path path...\n   Tests the structure if selecting with cond-path returns anything.\n   If so, it uses the following path for this portion of the navigation.\n   Otherwise, it tries the next cond-path. If nothing matches, then the structure\n   is not selected.\n\n   The input paths may be parameterized, in which case the result of cond-path\n   will be parameterized in the order of which the parameterized navigators\n   were declared."}}, t_com$rpl$specter12967 {:num-fields 3, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/t_com$rpl$specter12967, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :type true, :anonymous true, :column 3, :line 937, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, traverse* {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 491, :column 7, :end-line 491, :end-column 16, :arglists (quote ([apath structure])), :doc "Return a reducible object that traverses over `structure` to every element\n   specified by the path"}, :name com.rpl.specter/traverse*, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :end-column 16, :method-params ([apath structure]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 491, :end-line 491, :max-fixed-arity 2, :fn-var true, :arglists (quote ([apath structure])), :doc "Return a reducible object that traverses over `structure` to every element\n   specified by the path"}, NIL->VECTOR {:name com.rpl.specter/NIL->VECTOR, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 917, :column 1, :end-line 920, :end-column 14, :doc "Navigates to [] if the value is nil. Otherwise it stays\n          navigated at the current value.", :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 920, :column 3, :end-line 920, :end-column 14, :doc "Navigates to [] if the value is nil. Otherwise it stays\n          navigated at the current value."}}, t_com$rpl$specter12876 {:num-fields 1, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/t_com$rpl$specter12876, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :type true, :anonymous true, :column 1, :line 617, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_com$rpl$specter12906 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta12907])), :file nil}, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/->t_com$rpl$specter12906, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([meta12907]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 690, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta12907])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, END-select* {:no-doc true, :protocol-inline nil, :meta {:no-doc true, :arglists (quote ([structure next-fn])), :file nil}, :name com.rpl.specter/END-select*, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([structure next-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 690, :max-fixed-arity 2, :fn-var true, :arglists (quote ([structure next-fn]))}, compiled-select-first {:name com.rpl.specter/compiled-select-first, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 456, :column 1, :end-line 457, :end-column 24, :doc "Version of select-first that takes in a path precompiled with comp-paths", :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 457, :column 3, :end-line 457, :end-column 24, :doc "Version of select-first that takes in a path precompiled with comp-paths"}}, compiled-transform {:name com.rpl.specter/compiled-transform, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 499, :column 1, :end-line 500, :end-column 21, :doc "Version of transform that takes in a path precompiled with comp-paths", :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 500, :column 3, :end-line 500, :end-column 21, :doc "Version of transform that takes in a path precompiled with comp-paths"}}, ATOM-transform* {:no-doc true, :protocol-inline nil, :meta {:no-doc true, :arglists (quote ([structure next-fn])), :file nil}, :name com.rpl.specter/ATOM-transform*, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([structure next-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 798, :max-fixed-arity 2, :fn-var true, :arglists (quote ([structure next-fn]))}, MAP-VALS {:name com.rpl.specter/MAP-VALS, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 617, :column 1, :end-line 620, :end-column 11, :doc "Navigate to each value of the map. This is more efficient than\n          navigating via [ALL LAST]", :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 620, :column 3, :end-line 620, :end-column 11, :doc "Navigate to each value of the map. This is more efficient than\n          navigating via [ALL LAST]"}}, ->t_com$rpl$specter12879 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta12880])), :file nil}, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/->t_com$rpl$specter12879, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([meta12880]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 630, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta12880])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_com$rpl$specter12867 {:num-fields 1, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/t_com$rpl$specter12867, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :type true, :anonymous true, :column 1, :line 571, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_com$rpl$specter12946 {:num-fields 4, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/t_com$rpl$specter12946, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :type true, :anonymous true, :column 5, :line 831, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_com$rpl$specter12873 {:num-fields 1, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/t_com$rpl$specter12873, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :type true, :anonymous true, :column 1, :line 607, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, not-selected? {:name com.rpl.specter/not-selected?, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 828, :column 1, :end-line 828, :end-column 29, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 828, :column 16, :end-line 828, :end-column 29}}, terminal-val {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 601, :column 20, :end-line 601, :end-column 32, :direct-nav true, :arglists (quote ([v])), :doc "Like `terminal` but specifies a val to set at the location regardless of\n   the collected values or the value at the location."}, :name com.rpl.specter/terminal-val, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :end-column 32, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :direct-nav true, :line 601, :end-line 601, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v])), :doc "Like `terminal` but specifies a val to set at the location regardless of\n   the collected values or the value at the location."}, STAY {:name com.rpl.specter/STAY, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 583, :column 1, :end-line 585, :end-column 7, :doc "Stays navigated at the current point. Essentially a no-op navigator.", :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 585, :column 3, :end-line 585, :end-column 7, :doc "Stays navigated at the current point. Essentially a no-op navigator."}}, t_com$rpl$specter12906 {:num-fields 1, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/t_com$rpl$specter12906, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :type true, :anonymous true, :column 1, :line 690, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_com$rpl$specter12912 {:num-fields 2, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/t_com$rpl$specter12912, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :type true, :anonymous true, :column 1, :line 717, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_com$rpl$specter12903 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta12904])), :file nil}, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/->t_com$rpl$specter12903, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([meta12904]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 679, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta12904])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, STOP-transform* {:no-doc true, :protocol-inline nil, :meta {:no-doc true, :arglists (quote ([structure next-fn])), :file nil}, :name com.rpl.specter/STOP-transform*, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([structure next-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 571, :max-fixed-arity 2, :fn-var true, :arglists (quote ([structure next-fn]))}, ->t_com$rpl$specter12885 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([start end meta12886])), :file nil}, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/->t_com$rpl$specter12885, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([start end meta12886]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 657, :max-fixed-arity 3, :fn-var true, :arglists (quote ([start end meta12886])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, continuous-subseqs-select* {:no-doc true, :protocol-inline nil, :meta {:no-doc true, :arglists (quote ([pred structure next-fn])), :file nil}, :name com.rpl.specter/continuous-subseqs-select*, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([pred structure next-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 668, :max-fixed-arity 3, :fn-var true, :arglists (quote ([pred structure next-fn]))}, codewalker-select* {:no-doc true, :protocol-inline nil, :meta {:no-doc true, :arglists (quote ([afn structure next-fn])), :file nil}, :name com.rpl.specter/codewalker-select*, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([afn structure next-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 742, :max-fixed-arity 3, :fn-var true, :arglists (quote ([afn structure next-fn]))}, select-one* {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 443, :column 7, :end-line 443, :end-column 18, :arglists (quote ([path structure])), :doc "Like select, but returns either one element or nil. Throws exception if multiple elements found"}, :name com.rpl.specter/select-one*, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :end-column 18, :method-params ([path structure]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 443, :end-line 443, :max-fixed-arity 2, :fn-var true, :arglists (quote ([path structure])), :doc "Like select, but returns either one element or nil. Throws exception if multiple elements found"}, t_com$rpl$specter12921 {:num-fields 3, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/t_com$rpl$specter12921, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :type true, :anonymous true, :column 3, :line 759, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_com$rpl$specter12909 {:num-fields 2, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/t_com$rpl$specter12909, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :type true, :anonymous true, :column 1, :line 701, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, continuous-subseqs-transform* {:no-doc true, :protocol-inline nil, :meta {:no-doc true, :arglists (quote ([pred structure next-fn])), :file nil}, :name com.rpl.specter/continuous-subseqs-transform*, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([pred structure next-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 668, :max-fixed-arity 3, :fn-var true, :arglists (quote ([pred structure next-fn]))}, ->t_com$rpl$specter12938 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([path temp__4655__auto__ late meta12939])), :file nil}, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/->t_com$rpl$specter12938, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([path temp__4655__auto__ late meta12939]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 816, :max-fixed-arity 4, :fn-var true, :arglists (quote ([path temp__4655__auto__ late meta12939])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, submap-transform* {:no-doc true, :protocol-inline nil, :meta {:no-doc true, :arglists (quote ([m-keys structure next-fn])), :file nil}, :name com.rpl.specter/submap-transform*, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([m-keys structure next-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 717, :max-fixed-arity 3, :fn-var true, :arglists (quote ([m-keys structure next-fn]))}, srange-dynamic-transform* {:no-doc true, :protocol-inline nil, :meta {:no-doc true, :arglists (quote ([start-fn end-fn structure next-fn])), :file nil}, :name com.rpl.specter/srange-dynamic-transform*, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([start-fn end-fn structure next-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 646, :max-fixed-arity 4, :fn-var true, :arglists (quote ([start-fn end-fn structure next-fn]))}, subselect {:name com.rpl.specter/subselect, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 751, :column 1, :end-line 751, :end-column 25, :doc "Navigates to a sequence that contains the results of (select ...),\n  but is a view to the original structure that can be transformed.\n\n  Requires that the input navigators will walk the structure's\n  children in the same order when executed on \"select\" and then\n  \"transform\".", :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 751, :column 16, :end-line 751, :end-column 25, :doc "Navigates to a sequence that contains the results of (select ...),\n  but is a view to the original structure that can be transformed.\n\n  Requires that the input navigators will walk the structure's\n  children in the same order when executed on \"select\" and then\n  \"transform\"."}}, FIRST {:name com.rpl.specter/FIRST, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 640, :column 1, :end-line 643, :end-column 8, :doc "Navigate to the first element of the collection. If the collection is\n          empty navigation is stopped at this point.", :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 643, :column 3, :end-line 643, :end-column 8, :doc "Navigate to the first element of the collection. If the collection is\n          empty navigation is stopped at this point."}}, META {:name com.rpl.specter/META, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 923, :column 1, :end-line 925, :end-column 7, :doc "Navigates to the metadata of the structure, or nil if\n  the structure has no metadata or may not contain metadata.", :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 925, :column 3, :end-line 925, :end-column 7, :doc "Navigates to the metadata of the structure, or nil if\n  the structure has no metadata or may not contain metadata."}}, codewalker-transform* {:no-doc true, :protocol-inline nil, :meta {:no-doc true, :arglists (quote ([afn structure next-fn])), :file nil}, :name com.rpl.specter/codewalker-transform*, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([afn structure next-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 742, :max-fixed-arity 3, :fn-var true, :arglists (quote ([afn structure next-fn]))}, parser {:name com.rpl.specter/parser, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 786, :column 1, :end-line 790, :end-column 9, :doc "Navigate to the result of running `parse-fn` on the value. For\n          transforms, the transformed value then has `unparse-fn` run on\n          it to get the final value at this point.", :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 790, :column 3, :end-line 790, :end-column 9, :doc "Navigate to the result of running `parse-fn` on the value. For\n          transforms, the transformed value then has `unparse-fn` run on\n          it to get the final value at this point."}}, t_com$rpl$specter12990 {:num-fields 8, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/t_com$rpl$specter12990, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :type true, :anonymous true, :column 5, :line 998, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, collect {:name com.rpl.specter/collect, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 932, :column 1, :end-line 935, :end-column 10, :doc "Adds the result of running select with the given path on the\n          current value to the collected vals.", :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 935, :column 3, :end-line 935, :end-column 10, :doc "Adds the result of running select with the given path on the\n          current value to the collected vals."}}, subset-transform* {:no-doc true, :protocol-inline nil, :meta {:no-doc true, :arglists (quote ([aset structure next-fn])), :file nil}, :name com.rpl.specter/subset-transform*, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([aset structure next-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 701, :max-fixed-arity 3, :fn-var true, :arglists (quote ([aset structure next-fn]))}, select* {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 434, :column 7, :end-line 434, :end-column 14, :arglists (quote ([path structure])), :doc "Navigates to and returns a sequence of all the elements specified by the path."}, :name com.rpl.specter/select*, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :end-column 14, :method-params ([path structure]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 434, :end-line 434, :max-fixed-arity 2, :fn-var true, :arglists (quote ([path structure])), :doc "Navigates to and returns a sequence of all the elements specified by the path."}, local-declarepath {:name com.rpl.specter/local-declarepath, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 567, :column 1, :end-line 567, :end-column 23, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 567, :column 6, :end-line 567, :end-column 23}}, srange-transform* {:no-doc true, :protocol-inline nil, :meta {:no-doc true, :arglists (quote ([start end structure next-fn])), :file nil}, :name com.rpl.specter/srange-transform*, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([start end structure next-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 657, :max-fixed-arity 4, :fn-var true, :arglists (quote ([start end structure next-fn]))}, late-path {:name com.rpl.specter/late-path, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 543, :column 1, :end-line 543, :end-column 15, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 543, :column 6, :end-line 543, :end-column 15}}, t_com$rpl$specter12987 {:num-fields 8, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/t_com$rpl$specter12987, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :type true, :anonymous true, :column 5, :line 980, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, END {:name com.rpl.specter/END, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 690, :column 1, :end-line 692, :end-column 6, :doc "Navigate to the empty subsequence after the last element of the collection.", :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 692, :column 3, :end-line 692, :end-column 6, :doc "Navigate to the empty subsequence after the last element of the collection."}}, ->t_com$rpl$specter12964 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta12965])), :file nil}, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/->t_com$rpl$specter12964, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([meta12965]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 923, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta12965])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, replace-in* {:protocol-inline nil, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 532, :column 7, :end-line 532, :end-column 18, :arglists (quote ([path transform-fn structure & {:keys [merge-fn], :or {merge-fn concat}}])), :doc "Similar to transform, except returns a pair of [transformed-structure sequence-of-user-ret].\n   The transform-fn in this case is expected to return [ret user-ret]. ret is\n   what's used to transform the data structure, while user-ret will be added to the user-ret sequence\n   in the final return. replace-in is useful for situations where you need to know the specific values\n   of what was transformed in the data structure.", :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(path transform-fn structure {:keys [merge-fn], :or {merge-fn concat}})], :arglists ([path transform-fn structure & {:keys [merge-fn], :or {merge-fn concat}}]), :arglists-meta (nil)}}, :name com.rpl.specter/replace-in*, :variadic true, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :end-column 18, :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(path transform-fn structure {:keys [merge-fn], :or {merge-fn concat}})], :arglists ([path transform-fn structure & {:keys [merge-fn], :or {merge-fn concat}}]), :arglists-meta (nil)}, :method-params [(path transform-fn structure {:keys [merge-fn], :or {merge-fn concat}})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 532, :end-line 532, :max-fixed-arity 3, :fn-var true, :arglists ([path transform-fn structure & {:keys [merge-fn], :or {merge-fn concat}}]), :doc "Similar to transform, except returns a pair of [transformed-structure sequence-of-user-ret].\n   The transform-fn in this case is expected to return [ret user-ret]. ret is\n   what's used to transform the data structure, while user-ret will be added to the user-ret sequence\n   in the final return. replace-in is useful for situations where you need to know the specific values\n   of what was transformed in the data structure."}, subset-select* {:no-doc true, :protocol-inline nil, :meta {:no-doc true, :arglists (quote ([aset structure next-fn])), :file nil}, :name com.rpl.specter/subset-select*, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([aset structure next-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 701, :max-fixed-arity 3, :fn-var true, :arglists (quote ([aset structure next-fn]))}, compiled-multi-transform {:name com.rpl.specter/compiled-multi-transform, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 508, :column 1, :end-line 509, :end-column 27, :doc "Version of `multi-transform` that takes in a path precompiled with `comp-paths`", :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 509, :column 3, :end-line 509, :end-column 27, :doc "Version of `multi-transform` that takes in a path precompiled with `comp-paths`"}}, ATOM-select* {:no-doc true, :protocol-inline nil, :meta {:no-doc true, :arglists (quote ([structure next-fn])), :file nil}, :name com.rpl.specter/ATOM-select*, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([structure next-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 798, :max-fixed-arity 2, :fn-var true, :arglists (quote ([structure next-fn]))}, t_com$rpl$specter12979 {:num-fields 2, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/t_com$rpl$specter12979, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :type true, :anonymous true, :column 1, :line 952, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_com$rpl$specter12876 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta12877])), :file nil}, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/->t_com$rpl$specter12876, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([meta12877]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 617, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta12877])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_com$rpl$specter12882 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([start-fn end-fn meta12883])), :file nil}, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/->t_com$rpl$specter12882, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([start-fn end-fn meta12883]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 646, :max-fixed-arity 3, :fn-var true, :arglists (quote ([start-fn end-fn meta12883])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, keypath {:name com.rpl.specter/keypath, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 772, :column 1, :end-line 772, :end-column 13, :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 772, :column 6, :end-line 772, :end-column 13}}, t_com$rpl$specter12927 {:num-fields 2, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/t_com$rpl$specter12927, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :type true, :anonymous true, :column 1, :line 776, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_com$rpl$specter12882 {:num-fields 3, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/t_com$rpl$specter12882, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :type true, :anonymous true, :column 1, :line 646, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, parser-transform* {:no-doc true, :protocol-inline nil, :meta {:no-doc true, :arglists (quote ([parse-fn unparse-fn structure next-fn])), :file nil}, :name com.rpl.specter/parser-transform*, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([parse-fn unparse-fn structure next-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 786, :max-fixed-arity 4, :fn-var true, :arglists (quote ([parse-fn unparse-fn structure next-fn]))}, srange-dynamic-select* {:no-doc true, :protocol-inline nil, :meta {:no-doc true, :arglists (quote ([start-fn end-fn structure next-fn])), :file nil}, :name com.rpl.specter/srange-dynamic-select*, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([start-fn end-fn structure next-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 646, :max-fixed-arity 4, :fn-var true, :arglists (quote ([start-fn end-fn structure next-fn]))}, ->t_com$rpl$specter12927 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([afn meta12928])), :file nil}, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/->t_com$rpl$specter12927, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([afn meta12928]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 776, :max-fixed-arity 2, :fn-var true, :arglists (quote ([afn meta12928])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ALL-select* {:no-doc true, :protocol-inline nil, :meta {:no-doc true, :arglists (quote ([structure next-fn])), :file nil}, :name com.rpl.specter/ALL-select*, :variadic false, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :method-params ([structure next-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 607, :max-fixed-arity 2, :fn-var true, :arglists (quote ([structure next-fn]))}, compiled-replace-in {:name com.rpl.specter/compiled-replace-in, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 529, :column 1, :end-line 530, :end-column 22, :doc "Version of replace-in that takes in a path precompiled with comp-paths", :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 530, :column 3, :end-line 530, :end-column 22, :doc "Version of replace-in that takes in a path precompiled with comp-paths"}}, t_com$rpl$specter12961 {:num-fields 2, :protocols #{cljs.core/IMeta com.rpl.specter.protocols/RichNavigator cljs.core/IWithMeta}, :name com.rpl.specter/t_com$rpl$specter12961, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :type true, :anonymous true, :column 1, :line 895, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, walker {:name com.rpl.specter/walker, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 732, :column 1, :end-line 735, :end-column 9, :doc "Using clojure.walk, navigate the data structure until reaching\n          a value for which `afn` returns truthy.", :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 735, :column 3, :end-line 735, :end-column 9, :doc "Using clojure.walk, navigate the data structure until reaching\n          a value for which `afn` returns truthy."}}, if-path {:name com.rpl.specter/if-path, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 974, :column 1, :end-line 974, :end-column 23, :doc "Like cond-path, but with if semantics.", :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 974, :column 16, :end-line 974, :end-column 23, :doc "Like cond-path, but with if semantics."}}, ALL {:name com.rpl.specter/ALL, :file "resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 607, :column 1, :end-line 610, :end-column 6, :doc "Navigate to every element of the collection. For maps navigates to\n          a vector of `[key value]`.", :meta {:file "D:\\Programming\\Projects\\Clojure\\coding-challenges\\resources\\public\\js\\compiled\\out\\com\\rpl\\specter.cljc", :line 610, :column 3, :end-line 610, :end-column 6, :doc "Navigate to every element of the collection. For maps navigates to\n          a vector of `[key value]`."}}}, :require-macros {com.rpl.specter com.rpl.specter, com.rpl.specter.util-macros com.rpl.specter.util-macros}, :cljs.analyzer/constants {:seen #{end :dynamicnav meta12922 start-fn meta12877 meta12959 m-keys late-then meta12939 meta12956 path cond-p meta12947 v path1 end-fn afn meta12910 temp__4655__auto__ late-cond pred :merge-fn meta12991 late meta12919 meta12962 meta12916 meta12913 path2 parse-fn meta12928 meta12983 meta12871 meta12886 start val late1 reduce-fn meta12897 meta12904 meta12980 unparse-fn meta12907 late2 late-fn meta12931 meta12868 else-path update-fn late-else meta12965 aset meta12974 meta13002 meta12880 meta12968 meta12934 then-path meta12988 meta12874 meta12883}, :order [:merge-fn :dynamicnav meta12868 afn meta12871 meta12874 meta12877 meta12880 start-fn end-fn meta12883 start end meta12886 pred meta12897 meta12904 meta12907 aset meta12910 m-keys meta12913 meta12916 meta12919 path late meta12922 meta12928 parse-fn unparse-fn meta12931 meta12934 temp__4655__auto__ meta12939 meta12947 update-fn late-fn meta12956 reduce-fn meta12959 v meta12962 meta12965 meta12968 meta12974 val meta12980 meta12983 cond-p then-path else-path late-then late-else meta12988 late-cond meta12991 path1 path2 late1 late2 meta13002]}, :doc nil}